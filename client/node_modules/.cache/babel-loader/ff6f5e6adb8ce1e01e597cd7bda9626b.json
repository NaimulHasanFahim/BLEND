{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\PostDetails\\\\ContributeDailog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Divider from \"@material-ui/core/Divider\";\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useNavigate } from 'react-router-dom';\nimport { updatePost } from '../../actions/posts';\nimport ChipInput from 'material-ui-chip-input';\nimport useStyles from './formStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 2\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BootstrapDialogTitle;\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired\n}; // const styles = theme => ({\n//   root: {\n//     flexGrow: 1\n//   },\n//   primaryColor: {\n//     color: teal[500]\n//   },\n//   secondaryColor: {\n//     color: grey[700]\n//   },\n//   padding: {\n//     padding: 0\n//   },\n//   mainHeader: {\n//     backgroundColor: grey[100],\n//     padding: 20,\n//     alignItems: \"center\"\n//   },\n//   mainContent: {\n//     padding: 40\n//   },\n//   secondaryContainer: {\n//     padding: \"20px 25px\",\n//     backgroundColor: grey[200]\n//   }\n// });\n\nconst initialContriData = {\n  message: '',\n  creator: '',\n  name: '',\n  selectedFile: [],\n  likes: [],\n  creatorImgUrl: '',\n  creatorEmail: ''\n};\nexport default function ContributeDailog({\n  currentId\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false); // const classes = styles;\n  ///FORM WORK\n\n  const [postData, setPostData] = useState({\n    contributedPost: []\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes1 = useStyles(); // const user = JSON.parse(localStorage.getItem('profile'));\n\n  const history = useNavigate(); // clears the post form to it's default state\n  //populating the form with post data to update\n\n  useEffect(() => {\n    if (post) setPostData(post); // setting the new data to which got from the form const[postData,setPostData]\n  }, [post]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const clear = () => {\n    setPostData({\n      contributedPost: []\n    });\n  };\n\n  const handleClose = () => {\n    dispatch(updatePost(currentId, {\n      postData\n    }));\n\n    for (let i = 0; i < 1000000; i++) {}\n\n    clear();\n    window.location.reload();\n    history(`/posts/${currentId}`);\n    setOpen(false);\n  };\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  };\n\n  const handleClosePopUp = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      children: [\"Wanna contribute? \", /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleClickOpen,\n        children: \"Contribute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Contribute\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            margin: '10px 10px'\n          },\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 6,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ChipInput, {\n            name: \"tags\",\n            variant: \"outlined\",\n            label: \"Tags\",\n            fullWidth: true,\n            value: postData.tags,\n            onAdd: chip => handleAddChip(chip),\n            onDelete: chip => handleDeleteChip(chip)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px 10px'\n          },\n          className: classes1.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: ({\n              base64\n            }) => setPostData({ ...postData,\n              selectedFile: base64\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 87\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClosePopUp,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 7\n  }, this);\n}\n\n_s(ContributeDailog, \"fE85IVhkDuMGxq/74z916y8I7wE=\", false, function () {\n  return [useSelector, useDispatch, useStyles, useNavigate];\n});\n\n_c2 = ContributeDailog;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapDialogTitle\");\n$RefreshReg$(_c2, \"ContributeDailog\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/PostDetails/ContributeDailog.js"],"names":["React","useState","useEffect","PropTypes","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","Divider","TextField","Button","Typography","useDispatch","useSelector","FileBase","useNavigate","updatePost","ChipInput","useStyles","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","theme","palette","grey","propTypes","node","func","isRequired","initialContriData","message","creator","name","selectedFile","likes","creatorImgUrl","creatorEmail","ContributeDailog","currentId","open","setOpen","postData","setPostData","contributedPost","post","state","posts","find","_id","dispatch","classes1","history","handleClickOpen","clear","handleClose","i","window","location","reload","handleAddChip","tag","tags","handleDeleteChip","chipToDelete","filter","handleClosePopUp","margin","e","target","value","chip","fileInput","base64"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nimport { TextField, Button, Typography} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { updatePost } from '../../actions/posts';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport useStyles from './formStyle';\r\n\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\n// const styles = theme => ({\r\n//   root: {\r\n//     flexGrow: 1\r\n//   },\r\n//   primaryColor: {\r\n//     color: teal[500]\r\n//   },\r\n//   secondaryColor: {\r\n//     color: grey[700]\r\n//   },\r\n\r\n//   padding: {\r\n//     padding: 0\r\n//   },\r\n//   mainHeader: {\r\n//     backgroundColor: grey[100],\r\n//     padding: 20,\r\n//     alignItems: \"center\"\r\n//   },\r\n//   mainContent: {\r\n//     padding: 40\r\n//   },\r\n//   secondaryContainer: {\r\n//     padding: \"20px 25px\",\r\n//     backgroundColor: grey[200]\r\n//   }\r\n// });\r\n\r\nconst initialContriData = {\r\n  message: '',\r\n  \r\n  creator: '',\r\n  name: '',\r\n  selectedFile: [],\r\n  likes: [],\r\n  creatorImgUrl: '',\r\n  creatorEmail: '',\r\n}\r\n \r\n\r\n\r\n\r\nexport default function ContributeDailog({currentId}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  // const classes = styles;\r\n\r\n  ///FORM WORK\r\n\r\n  const [postData, setPostData] = useState({ contributedPost: [] });\r\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes1 = useStyles();\r\n  // const user = JSON.parse(localStorage.getItem('profile'));\r\n  const history = useNavigate();\r\n  // clears the post form to it's default state\r\n  //populating the form with post data to update\r\n  useEffect(() => {\r\n    if (post) setPostData(post); // setting the new data to which got from the form const[postData,setPostData]\r\n  }, [post]);\r\n  \r\n\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const clear = () => {\r\n    setPostData({ contributedPost: [] });\r\n  };\r\n  \r\n  const handleClose = () => {\r\n    dispatch(updatePost(currentId, { postData }));\r\n    for (let i = 0; i < 1000000; i++){\r\n        \r\n    }\r\n    clear();\r\n    window.location.reload();\r\n    history(`/posts/${currentId}`)\r\n    setOpen(false);\r\n    };\r\n    const handleAddChip = (tag) => {\r\n        setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n    };\r\n    const handleDeleteChip = (chipToDelete) => {\r\n        setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\r\n    };\r\n    const handleClosePopUp = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n      <div>\r\n          <Typography>Wanna contribute? <Button onClick={handleClickOpen}>Contribute</Button></Typography>\r\n          <Dialog open={open} onClose={handleClose}>\r\n              <DialogTitle><Typography variant=\"h4\">Contribute</Typography></DialogTitle>\r\n              <DialogContent>\r\n                  <TextField style={{ margin: '10px 10px' }} name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={6} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n                  <div >\r\n                      <ChipInput\r\n                        name=\"tags\"\r\n                        variant=\"outlined\"\r\n                        label=\"Tags\"\r\n                        fullWidth\r\n                        value={postData.tags}\r\n                        onAdd={(chip) => handleAddChip(chip)}\r\n                        onDelete={(chip) => handleDeleteChip(chip)}\r\n                      />\r\n                  </div>\r\n                  <div style={{ margin: '10px 10px' }} className={classes1.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n                  <Divider style={{ margin: '20px 0' }} />\r\n              </DialogContent>\r\n              <DialogActions>\r\n                  <Button onClick={handleClosePopUp}>Cancel</Button>\r\n                  <Button onClick={handleClose}>Save Changes</Button>\r\n              </DialogActions>\r\n          </Dialog>\r\n    </div>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}