{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, FETCH_BY_SEARCH, CREATE, UPDATE, LIKE, DELETE } from '../constants/actionTypes.js';\nimport * as api from '../api/index'; //Action Creators\n\nexport const getPost = id => async dispatch => {\n  try {\n    // dispatch({ type: START_LOADING });\n    const {\n      data\n    } = await api.fetchPost(id);\n    console.log(data);\n    dispatch({\n      type: FETCH_POST,\n      payload: {\n        post: data\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    // dispatch({ type: START_LOADING });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    console.log(data);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    }); // dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    // console.log(post);\n    const {\n      data\n    } = await api.createPost(post);\n    console.log(data);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // export const likePost = (id) => async (dispatch) => {\n//   try {\n//     const { data } = await api.likePost(id);\n//     dispatch({ type: UPDATE, payload: data });\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n    console.log(\"do you rally want to delete the post\");\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/sabbi/OneDrive/Desktop/course/database_project_final/d_final/BlogAndArchieveUsingMERN-1/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_POST","FETCH_BY_SEARCH","CREATE","UPDATE","LIKE","DELETE","api","getPost","id","dispatch","data","fetchPost","console","log","type","payload","post","error","getPosts","page","fetchPosts","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","message","updatePost","likePost","user","JSON","parse","localStorage","getItem","token","deletePost"],"mappings":"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","sourcesContent":["import {FETCH_ALL,FETCH_POST,FETCH_BY_SEARCH,CREATE, UPDATE,LIKE, DELETE,} from '../constants/actionTypes.js';\r\nimport * as api from '../api/index';\r\n\r\n//Action Creators\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    // dispatch({ type: START_LOADING });\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    console.log(data);\r\n\r\n    dispatch({ type: FETCH_POST, payload: { post: data } });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts(page);\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    // dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n    console.log(data);\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: data  });\r\n    // dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    // console.log(post);\r\n    const { data } = await api.createPost(post);\r\n    console.log(data)\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n     console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  try {\r\n    const { data } = await api.likePost(id, user?.token);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n// export const likePost = (id) => async (dispatch) => {\r\n//   try {\r\n//     const { data } = await api.likePost(id);\r\n\r\n//     dispatch({ type: UPDATE, payload: data });\r\n\r\n//   } catch (error) {\r\n//     console.log(error.message);\r\n//   }\r\n\r\n// };\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n    console.log(\"do you rally want to delete the post\");\r\n  } catch (error) {\r\n    console.log(error.message); \r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}