{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\PostDetails\\\\EditForm.js\";\nimport React from 'react';\nimport { Grid, Paper, Button, Typography } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditForm() {\n  const paperStyle = {\n    padding: '0 15px 40px 15px',\n    width: 250\n  };\n  const btnStyle = {\n    marginTop: 10\n  };\n  const phoneRegExp = /^[2-9]{2}[0-9]{8}/;\n  const passwordRegExp = /^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/;\n  const initialValues = {\n    name: '',\n    email: '',\n    phoneNumber: '',\n    password: '',\n    confirmPassword: ''\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().min(3, \"It's too short\").required(\"Required\"),\n    email: Yup.string().email(\"Enter valid email\").required(\"Required\"),\n    // phoneNumber: Yup.number().typeError(\"Enter valid Phone number\").required(\"Required\"),\n    phoneNumber: Yup.string().matches(phoneRegExp, \"Enter valid Phone number\").required(\"Required\"),\n    password: Yup.string().min(8, \"Minimum characters should be 8\").matches(passwordRegExp, \"Password must have one upper, lower case, number, special symbol\").required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password')], \"Password not matches\").required('Required')\n  });\n\n  const onSubmit = (values, props) => {\n    alert(JSON.stringify(values), null, 2);\n    props.resetForm();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 0,\n      style: paperStyle,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          children: \"Fill the form to create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: initialValues,\n        validationSchema: validationSchema,\n        onSubmit: onSubmit,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"name\",\n            label: \"Name\",\n            fullWidth: true,\n            error: props.errors.name && props.touched.name,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"email\",\n            label: \"Email\",\n            fullWidth: true,\n            error: props.errors.email && props.touched.email,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"phoneNumber\",\n            label: \"Phone Number\",\n            fullWidth: true,\n            error: props.errors.phoneNumber && props.touched.phoneNumber,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"phoneNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            fullWidth: true,\n            error: props.errors.password && props.touched.password,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            as: TextField,\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            type: \"password\",\n            fullWidth: true,\n            error: props.errors.confirmPassword && props.touched.confirmPassword,\n            helperText: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"confirmPassword\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 45\n            }, this),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            style: btnStyle,\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_c = EditForm;\nexport default EditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditForm\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/PostDetails/EditForm.js"],"names":["React","Grid","Paper","Button","Typography","TextField","Formik","Form","Field","ErrorMessage","Yup","EditForm","paperStyle","padding","width","btnStyle","marginTop","phoneRegExp","passwordRegExp","initialValues","name","email","phoneNumber","password","confirmPassword","validationSchema","object","shape","string","min","required","matches","oneOf","ref","onSubmit","values","props","alert","JSON","stringify","resetForm","errors","touched"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Grid, Paper, Button, Typography } from '@material-ui/core'\r\nimport { TextField } from '@material-ui/core'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik'\r\nimport * as Yup from 'yup'\r\nfunction EditForm() {\r\n    const paperStyle = { padding: '0 15px 40px 15px', width: 250, }\r\n    const btnStyle = { marginTop: 10 }\r\n    const phoneRegExp=/^[2-9]{2}[0-9]{8}/\r\n    const passwordRegExp=/^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$/\r\n    const initialValues = {\r\n        name: '',\r\n        email: '',\r\n        phoneNumber: '',\r\n        password: '',\r\n        confirmPassword:''\r\n    }\r\n    const validationSchema = Yup.object().shape({\r\n        name: Yup.string().min(3, \"It's too short\").required(\"Required\"),\r\n        email: Yup.string().email(\"Enter valid email\").required(\"Required\"),\r\n        // phoneNumber: Yup.number().typeError(\"Enter valid Phone number\").required(\"Required\"),\r\n        phoneNumber:Yup.string().matches(phoneRegExp,\"Enter valid Phone number\").required(\"Required\"),\r\n        password: Yup.string().min(8, \"Minimum characters should be 8\")\r\n        .matches(passwordRegExp,\"Password must have one upper, lower case, number, special symbol\").required('Required'),\r\n        confirmPassword:Yup.string().oneOf([Yup.ref('password')],\"Password not matches\").required('Required')\r\n    })\r\n    const onSubmit = (values, props) => {\r\n\r\n        alert(JSON.stringify(values), null, 2)\r\n        props.resetForm()\r\n    }\r\n    return (\r\n        <Grid>\r\n            <Paper elevation={0} style={paperStyle}>\r\n                <Grid align='center'>\r\n                    <Typography variant='caption'>Fill the form to create an account</Typography>\r\n                </Grid>\r\n                <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit}>\r\n                    {(props) => (\r\n                        <Form noValidate>\r\n                            {/* <TextField label='Name' name=\"name\" fullWidth value={props.values.name}\r\n                    onChange={props.handleChange} /> */}\r\n\r\n                            <Field as={TextField} name='name' label='Name' fullWidth\r\n                                error={props.errors.name && props.touched.name}\r\n                                helperText={<ErrorMessage name='name' />} required />\r\n\r\n                            {/* <TextField label='Email' name='email' type='Email' fullWidth \r\n                    {...props.getFieldProps('email')}/> */}\r\n\r\n                            <Field as={TextField} name='email' label='Email' fullWidth\r\n                                error={props.errors.email && props.touched.email}\r\n                                helperText={<ErrorMessage name='email' />} required />\r\n\r\n                            <Field as={TextField} name=\"phoneNumber\" label='Phone Number' fullWidth\r\n                                error={props.errors.phoneNumber && props.touched.phoneNumber}\r\n                                helperText={<ErrorMessage name='phoneNumber' />} required />\r\n\r\n                            <Field as={TextField} name='password' label='Password' type='password' fullWidth\r\n                                error={props.errors.password && props.touched.password}\r\n                                helperText={<ErrorMessage name='password' />} required />\r\n\r\n                            <Field as={TextField} name='confirmPassword' label='Confirm Password' type='password' fullWidth\r\n                                error={props.errors.confirmPassword && props.touched.confirmPassword}\r\n                                helperText={<ErrorMessage name='confirmPassword' />} required />\r\n\r\n                            <Button type='submit' style={btnStyle} variant='contained'\r\n                                color='primary'>Register</Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default EditForm\r\n"]},"metadata":{},"sourceType":"module"}