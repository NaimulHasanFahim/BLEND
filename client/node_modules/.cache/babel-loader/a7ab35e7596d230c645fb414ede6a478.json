{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\Profile\\\\FormDailog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogActions from '@mui/material/DialogActions';\nimport IconButton from '@mui/material/IconButton';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Divider from \"@material-ui/core/Divider\";\nimport { TextField, Button, Typography } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useNavigate } from 'react-router-dom';\nimport { updatePost } from '../../actions/posts';\nimport ChipInput from 'material-ui-chip-input';\nimport useStyles from './formStyle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BootstrapDialogTitle = props => {\n  const {\n    children,\n    onClose,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(DialogTitle, {\n    sx: {\n      m: 0,\n      p: 2\n    },\n    ...other,\n    children: [children, onClose ? /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"close\",\n      onClick: onClose,\n      sx: {\n        position: 'absolute',\n        right: 8,\n        top: 8,\n        color: theme => theme.palette.grey[500]\n      },\n      children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BootstrapDialogTitle;\nBootstrapDialogTitle.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func.isRequired\n};\nexport default function EditFormDialogs({\n  Data\n}) {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [userData, setUserData] = useState(null);\n  const dispatch = useDispatch();\n  const classes1 = useStyles();\n  const history = useNavigate();\n  useEffect(() => {\n    if (Data) setUserData(Data); // setting the new data to which got from the form const[postData,setPostData]\n  }, [Data]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    // dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\n    for (let i = 0; i < 1000000; i++) {}\n\n    window.location.reload(); // history(`/posts/${currentId}`)\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: handleClickOpen,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Edit Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            margin: '10px 10px'\n          },\n          name: \"title\",\n          variant: \"outlined\",\n          label: \"Title\",\n          fullWidth: true,\n          value: postData.title,\n          onChange: e => setPostData({ ...postData,\n            title: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            margin: '10px 10px'\n          },\n          name: \"message\",\n          variant: \"outlined\",\n          label: \"Message\",\n          fullWidth: true,\n          multiline: true,\n          rows: 6,\n          value: postData.message,\n          onChange: e => setPostData({ ...postData,\n            message: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ChipInput, {\n            name: \"tags\",\n            variant: \"outlined\",\n            label: \"Tags\",\n            fullWidth: true,\n            value: postData.tags,\n            onAdd: chip => handleAddChip(chip),\n            onDelete: chip => handleDeleteChip(chip)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            margin: '10px 10px'\n          },\n          className: classes1.fileInput,\n          children: /*#__PURE__*/_jsxDEV(FileBase, {\n            type: \"file\",\n            multiple: false,\n            onDone: ({\n              base64\n            }) => setPostData({ ...postData,\n              selectedFile: base64\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 79\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: '20px 0'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditFormDialogs, \"4NiOYzXGCFZuOLNvqJQtlwwthdw=\", false, function () {\n  return [useDispatch, useStyles, useNavigate];\n});\n\n_c2 = EditFormDialogs;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BootstrapDialogTitle\");\n$RefreshReg$(_c2, \"EditFormDialogs\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/Profile/FormDailog.js"],"names":["React","useState","useEffect","PropTypes","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","CloseIcon","Divider","TextField","Button","Typography","useDispatch","useSelector","FileBase","useNavigate","updatePost","ChipInput","useStyles","BootstrapDialogTitle","props","children","onClose","other","m","p","position","right","top","color","theme","palette","grey","propTypes","node","func","isRequired","EditFormDialogs","Data","open","setOpen","userData","setUserData","dispatch","classes1","history","handleClickOpen","handleClose","i","window","location","reload","margin","postData","title","e","setPostData","target","value","message","tags","chip","handleAddChip","handleDeleteChip","fileInput","base64","selectedFile"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\n\r\nimport { TextField, Button, Typography} from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { updatePost } from '../../actions/posts';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport useStyles from './formStyle';\r\n\r\nconst BootstrapDialogTitle = (props) => {\r\n  const { children, onClose, ...other } = props;\r\n\r\n  return (\r\n    <DialogTitle sx={{ m: 0, p: 2 }} {...other}>\r\n      {children}\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={onClose}\r\n          sx={{\r\n            position: 'absolute',\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </DialogTitle>\r\n  );\r\n};\r\n\r\nBootstrapDialogTitle.propTypes = {\r\n  children: PropTypes.node,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function EditFormDialogs({Data}) {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [userData,setUserData] = useState(null)\r\n  const dispatch = useDispatch();\r\n  const classes1 = useStyles();\r\n  const history = useNavigate();\r\n  useEffect(() => {\r\n    if (Data) setUserData(Data); // setting the new data to which got from the form const[postData,setPostData]\r\n  }, [Data]);\r\n  \r\n\r\n  \r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // dispatch(updatePost(currentId, { ...postData, name: user?.result?.name }));\r\n    for (let i = 0; i < 1000000; i++){\r\n        \r\n    }\r\n    window.location.reload();\r\n    // history(`/posts/${currentId}`)\r\n    setOpen(false);\r\n  };\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div onClick={handleClickOpen}>Edit</div>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <DialogTitle><Typography variant=\"h4\">Edit Post</Typography></DialogTitle>\r\n        <DialogContent>\r\n        <TextField style={{margin: '10px 10px'}} name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField style={{margin: '10px 10px'}} name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={6} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n         <div >\r\n          <ChipInput\r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags\"\r\n            fullWidth\r\n            value={postData.tags}\r\n            onAdd={(chip) => handleAddChip(chip)}\r\n            onDelete={(chip) => handleDeleteChip(chip)}\r\n          />\r\n        </div>\r\n        \r\n          <div style={{ margin: '10px 10px' }} className={classes1.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n          <Divider style={{ margin: '20px 0' }} /> \r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={handleClose}>Save Changes</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}