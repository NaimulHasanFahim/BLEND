{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { Avatar, Button, Paper, Grid, Typography, Container } from \"@mui/material\"; // import LockIcon from '@mui/icons-material/Lock';\n\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport useStyles from \"./styles\";\nimport Gicon from \"./icon\";\nimport Box from \"@material-ui/core/Box\"; // import { TextField } from '@material-ui/core';\n\nimport Input from \"./Input\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AUTH } from \"../../constants/actionTypes\";\nimport { signin, signup } from \"../../actions/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\"\n};\n\nconst Auth = () => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState(initialState);\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(\"Hello\")\n    // console.log(formData)\n\n    if (isSignup) {\n      dispatch(signup(formData, navigate));\n    } else {\n      dispatch(signin(formData, navigate));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId; //console.log(result);\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      navigate(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Sign in failed.Try again\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: isSignup ? \"Sign Up\" : \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                name: \"firstName\",\n                label: \"First Name\",\n                handleChange: handleChange,\n                autoFocus: true,\n                half: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"lastName\",\n                label: \"Last Name\",\n                handleChange: handleChange,\n                half: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              label: \"Email\",\n              handleChange: handleChange,\n              autoFocus: isSignup ? false : true,\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              label: \"Password\",\n              autocomplete: \"on\",\n              handleChange: handleChange,\n              type: showPassword ? \"text\" : \"password\",\n              handleShowPassword: handleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n              name: \"confirmPassword\",\n              autocomplete: \"on\",\n              label: \"Confirm Password\",\n              handleChange: handleChange,\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              color: \"secondary\",\n              className: classes.submit,\n              children: isSignup ? \"Sign Up\" : \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: \"802372011188-c3h6alkbm8dh88imcrhjd733su4q7kvr.apps.googleusercontent.com\",\n              render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.googleButton,\n                color: \"primary\",\n                fullWidth: true,\n                onClick: renderProps.onClick,\n                disabled: renderProps.disabled,\n                startIcon: /*#__PURE__*/_jsxDEV(Gicon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 32\n                }, this),\n                variant: \"contained\",\n                children: \"Google Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this),\n              onSuccess: googleSuccess,\n              onFailure: googleFailure,\n              cookiePolicy: \"single_host_origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: switchMode,\n                children: isSignup ? \"Already have an account ? Sign In\" : \"Don't have an account ? Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"hH1rzNT02LPgaojl6KIMlgVOCl4=\", false, function () {\n  return [useStyles, useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/Auth/Auth.js"],"names":["React","useState","GoogleLogin","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","useStyles","Gicon","Box","Input","useDispatch","useNavigate","AUTH","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","Auth","classes","dispatch","showPassword","setShowPassword","isSignup","setIsSignup","navigate","formData","setFormData","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleFailure","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,UALF,EAMEC,SANF,QAOO,eAPP,C,CAQA;;AACA,OAAOC,gBAAP,MAA6B,kCAA7B;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,KAAP,MAAkB,QAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,6BAArB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,oBAA/B;;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,EADQ;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,eAAe,EAAE;AALE,CAArB;;AAQA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,OAAO,GAAGhB,SAAS,EAAzB;AACA,QAAMiB,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM,CAACc,YAAD,EAAeC,eAAf,IAAkC5B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAAC6B,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM+B,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAACkB,YAAD,CAAxC;;AAEA,QAAMgB,kBAAkB,GAAG,MAAM;AAC/BN,IAAAA,eAAe,CAAEO,gBAAD,IAAsB,CAACA,gBAAxB,CAAf;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF,GAD0B,CAE1B;AACA;;AACA,QAAIT,QAAJ,EAAc;AACZH,MAAAA,QAAQ,CAACT,MAAM,CAACe,QAAD,EAAWD,QAAX,CAAP,CAAR;AACD,KAFD,MAEO;AACLL,MAAAA,QAAQ,CAACV,MAAM,CAACgB,QAAD,EAAWD,QAAX,CAAP,CAAR;AACD;AACF,GATD;;AAWA,QAAMQ,YAAY,GAAIF,CAAD,IAAO;AAC1BJ,IAAAA,WAAW,CAAC,EAAE,GAAGD,QAAL;AAAe,OAACK,CAAC,CAACG,MAAF,CAASC,IAAV,GAAiBJ,CAAC,CAACG,MAAF,CAASE;AAAzC,KAAD,CAAX;AACD,GAFD;;AAIA,QAAMC,UAAU,GAAG,MAAM;AACvBb,IAAAA,WAAW,CAAEc,YAAD,IAAkB,CAACA,YAApB,CAAX;AACAhB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACD,GAHD;;AAKA,QAAMiB,aAAa,GAAG,MAAOC,GAAP,IAAe;AACnC,UAAMC,MAAM,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEE,UAApB;AACA,UAAMC,KAAK,GAAGH,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEI,OAAnB,CAFmC,CAGnC;;AAEA,QAAI;AACFxB,MAAAA,QAAQ,CAAC;AAAEyB,QAAAA,IAAI,EAAEpC,IAAR;AAAcqC,QAAAA,IAAI,EAAE;AAAEL,UAAAA,MAAF;AAAUE,UAAAA;AAAV;AAApB,OAAD,CAAR;AACAlB,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,CAGE,OAAOsB,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaA,QAAMG,aAAa,GAAIH,KAAD,IAAW;AAC/BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GAHD;;AAKA,sBACE;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,SAAS,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAC,IAArC;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE9B,OAAO,CAACgC,KAA1B;AAAiC,QAAA,SAAS,EAAE,CAA5C;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,SAAS,EAAEhC,OAAO,CAACiC,MAA3B;AAAA,iCACE,QAAC,gBAAD;AAAkB,YAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBACG7B,QAAQ,GAAG,SAAH,GAAe;AAD1B;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AAAM,UAAA,SAAS,EAAEJ,OAAO,CAACkC,IAAzB;AAA+B,UAAA,QAAQ,EAAEvB,YAAzC;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,uBACGP,QAAQ,iBACP;AAAA,sCACE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,WADP;AAEE,gBAAA,KAAK,EAAC,YAFR;AAGE,gBAAA,YAAY,EAAEU,YAHhB;AAIE,gBAAA,SAAS,MAJX;AAKE,gBAAA,IAAI;AALN;AAAA;AAAA;AAAA;AAAA,sBADF,eAQE,QAAC,KAAD;AACE,gBAAA,IAAI,EAAC,UADP;AAEE,gBAAA,KAAK,EAAC,WAFR;AAGE,gBAAA,YAAY,EAAEA,YAHhB;AAIE,gBAAA,IAAI;AAJN;AAAA;AAAA;AAAA;AAAA,sBARF;AAAA,4BAFJ,eAkBE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,OADP;AAEE,cAAA,KAAK,EAAC,OAFR;AAGE,cAAA,YAAY,EAAEA,YAHhB;AAIE,cAAA,SAAS,EAAEV,QAAQ,GAAG,KAAH,GAAW,IAJhC;AAKE,cAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,oBAlBF,eAyBE,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,KAAK,EAAC,UAFR;AAGE,cAAA,YAAY,EAAC,IAHf;AAIE,cAAA,YAAY,EAAEU,YAJhB;AAKE,cAAA,IAAI,EAAEZ,YAAY,GAAG,MAAH,GAAY,UALhC;AAME,cAAA,kBAAkB,EAAEO;AANtB;AAAA;AAAA;AAAA;AAAA,oBAzBF,EAiCGL,QAAQ,iBACP,QAAC,KAAD;AACE,cAAA,IAAI,EAAC,iBADP;AAEE,cAAA,YAAY,EAAC,IAFf;AAGE,cAAA,KAAK,EAAC,kBAHR;AAIE,cAAA,YAAY,EAAEU,YAJhB;AAKE,cAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,oBAlCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA4CE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,QADP;AAEE,cAAA,SAAS,MAFX;AAGE,cAAA,OAAO,EAAC,WAHV;AAIE,cAAA,KAAK,EAAC,WAJR;AAKE,cAAA,SAAS,EAAEd,OAAO,CAACmC,MALrB;AAAA,wBAOG/B,QAAQ,GAAG,SAAH,GAAe;AAP1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA5CF,eAwDE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,QAAQ,EAAC,0EADX;AAEE,cAAA,MAAM,EAAGgC,WAAD,iBACN,QAAC,MAAD;AACE,gBAAA,SAAS,EAAEpC,OAAO,CAACqC,YADrB;AAEE,gBAAA,KAAK,EAAC,SAFR;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,OAAO,EAAED,WAAW,CAACE,OAJvB;AAKE,gBAAA,QAAQ,EAAEF,WAAW,CAACG,QALxB;AAME,gBAAA,SAAS,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,wBANb;AAOE,gBAAA,OAAO,EAAC,WAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAeE,cAAA,SAAS,EAAEnB,aAfb;AAgBE,cAAA,SAAS,EAAEW,aAhBb;AAiBE,cAAA,YAAY,EAAC;AAjBf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAxDF,eA8EE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,cAAc,EAAC,UAA/B;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAA,qCACE,QAAC,MAAD;AAAQ,gBAAA,OAAO,EAAEb,UAAjB;AAAA,0BACGd,QAAQ,GACL,mCADK,GAEL;AAHN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9EF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAsGD,CAvJD;;GAAML,I;UACYf,S,EACCI,W,EAGAC,W;;;KALbU,I;AAyJN,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { GoogleLogin } from \"react-google-login\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@mui/material\";\r\n// import LockIcon from '@mui/icons-material/Lock';\r\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\r\nimport useStyles from \"./styles\";\r\nimport Gicon from \"./icon\";\r\nimport Box from \"@material-ui/core/Box\";\r\n// import { TextField } from '@material-ui/core';\r\nimport Input from \"./Input\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AUTH } from \"../../constants/actionTypes\";\r\nimport { signin, signup } from \"../../actions/auth\";\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst Auth = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState(initialState);\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword((prevShowPassword) => !prevShowPassword);\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"Hello\")\r\n    // console.log(formData)\r\n    if (isSignup) {\r\n      dispatch(signup(formData, navigate));\r\n    } else {\r\n      dispatch(signin(formData, navigate));\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const switchMode = () => {\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    setShowPassword(false);\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = res?.profileObj;\r\n    const token = res?.tokenId;\r\n    //console.log(result);\r\n\r\n    try {\r\n      dispatch({ type: AUTH, data: { result, token } });\r\n      navigate(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const googleFailure = (error) => {\r\n    console.log(error);\r\n    console.log(\"Sign in failed.Try again\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <Paper className={classes.paper} elevation={3}>\r\n          <Avatar className={classes.avatar}>\r\n            <LockOutlinedIcon color=\"primary\" />\r\n          </Avatar>\r\n          <Typography variant=\"h5\">\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={handleSubmit}>\r\n            <Grid container spacing={2}>\r\n              {isSignup && (\r\n                <>\r\n                  <Input\r\n                    name=\"firstName\"\r\n                    label=\"First Name\"\r\n                    handleChange={handleChange}\r\n                    autoFocus\r\n                    half\r\n                  />\r\n                  <Input\r\n                    name=\"lastName\"\r\n                    label=\"Last Name\"\r\n                    handleChange={handleChange}\r\n                    half\r\n                  />\r\n                </>\r\n              )}\r\n              <Input\r\n                name=\"email\"\r\n                label=\"Email\"\r\n                handleChange={handleChange}\r\n                autoFocus={isSignup ? false : true}\r\n                type=\"email\"\r\n              />\r\n              <Input\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                autocomplete=\"on\"\r\n                handleChange={handleChange}\r\n                type={showPassword ? \"text\" : \"password\"}\r\n                handleShowPassword={handleShowPassword}\r\n              />\r\n              {isSignup && (\r\n                <Input\r\n                  name=\"confirmPassword\"\r\n                  autocomplete=\"on\"\r\n                  label=\"Confirm Password\"\r\n                  handleChange={handleChange}\r\n                  type=\"password\"\r\n                />\r\n              )}\r\n            </Grid>\r\n            <Box pt={2}>\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"secondary\"\r\n                className={classes.submit}\r\n              >\r\n                {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n              </Button>\r\n            </Box>\r\n\r\n            <Box pt={2}>\r\n              <GoogleLogin\r\n                clientId=\"802372011188-c3h6alkbm8dh88imcrhjd733su4q7kvr.apps.googleusercontent.com\"\r\n                render={(renderProps) => (\r\n                  <Button\r\n                    className={classes.googleButton}\r\n                    color=\"primary\"\r\n                    fullWidth\r\n                    onClick={renderProps.onClick}\r\n                    disabled={renderProps.disabled}\r\n                    startIcon={<Gicon />}\r\n                    variant=\"contained\"\r\n                  >\r\n                    Google Sign In\r\n                  </Button>\r\n                )}\r\n                onSuccess={googleSuccess}\r\n                onFailure={googleFailure}\r\n                cookiePolicy=\"single_host_origin\"\r\n              />\r\n            </Box>\r\n\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Button onClick={switchMode}>\r\n                  {isSignup\r\n                    ? \"Already have an account ? Sign In\"\r\n                    : \"Don't have an account ? Sign Up\"}\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Paper>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}