{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\Profile\\\\MainProfile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Card, CardActionArea, CardContent, CardMedia, Typography, Toolbar, Avatar, Button, Paper } from '@material-ui/core'; // import { useNavigate, useLocation } from 'react-router-dom';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport IconButton from '@mui/material/IconButton';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport Stack from '@mui/material/Stack';\nimport useStyles from './styles';\nimport { styled } from '@mui/material/styles'; // import { getUserById } from '../../actions/profile';\n\nimport { useParams, useNavigate, Link } from 'react-router-dom';\nimport { getUserById } from '../../actions/profile';\nimport GitHubIcon from '@mui/icons-material/GitHub';\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\nimport FacebookIcon from '@mui/icons-material/Facebook';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = styled('input')({\n  display: 'none'\n});\n\nconst MainProfile = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const [userData, setUserData] = useState({\n    _id: '',\n    name: '',\n    email: '',\n    password: '',\n    profileImg: '',\n    googleId: '',\n    imageUrl: '',\n    imageData: '',\n    linkedIn: '',\n    github: '',\n    social: '',\n    institude: ''\n  });\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const classes = useStyles(); // console.log(userData)\n\n  const setUserProfileData = data => {\n    setUserData(data[0]);\n  };\n\n  useEffect(() => {\n    dispatch(getUserById(id, setUserProfileData));\n  }, [id]); /// UserPost\n\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const history = useNavigate();\n  const recommendedPosts = posts.filter(id => id === post.creatorEmail);\n  const loggeduser = JSON.parse(localStorage.getItem('profile'));\n  console.log(recommendedPosts);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      raised: true,\n      elevation: 6,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.centerI,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.sizeAvatar,\n          alt: \"User Image\",\n          src: userData.imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.details,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          style: {\n            padding: '0px 2px'\n          },\n          variant: \"h5\",\n          children: userData.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'inline-block'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            href: userData.linkedIn,\n            children: [\" \", /*#__PURE__*/_jsxDEV(LinkedInIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: userData.github,\n            children: [\" \", /*#__PURE__*/_jsxDEV(GitHubIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: userData.social,\n            children: [\" \", /*#__PURE__*/_jsxDEV(FacebookIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 52\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        gutterBottom: true,\n        variant: \"h5\",\n        component: \"h2\",\n        children: userData.institude\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MainProfile, \"LZTOSnad4yxKcsXveZ3zSyIBxy8=\", false, function () {\n  return [useDispatch, useParams, useStyles, useSelector, useNavigate];\n});\n\n_c = MainProfile;\nexport default MainProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainProfile\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/Profile/MainProfile.js"],"names":["React","useState","useEffect","Card","CardActionArea","CardContent","CardMedia","Typography","Toolbar","Avatar","Button","Paper","useDispatch","useSelector","IconButton","PhotoCamera","Stack","useStyles","styled","useParams","useNavigate","Link","getUserById","GitHubIcon","LinkedInIcon","FacebookIcon","Input","display","MainProfile","user","setUser","JSON","parse","localStorage","getItem","userData","setUserData","_id","name","email","password","profileImg","googleId","imageUrl","imageData","linkedIn","github","social","institude","dispatch","id","classes","setUserProfileData","data","post","posts","isLoading","state","history","recommendedPosts","filter","creatorEmail","loggeduser","console","log","card","centerI","sizeAvatar","details","padding","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Card,CardActionArea,CardContent ,CardMedia, Typography, Toolbar, Avatar, Button, Paper} from '@material-ui/core';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\r\nimport Stack from '@mui/material/Stack';\r\nimport useStyles from './styles';\r\nimport { styled } from '@mui/material/styles';\r\n// import { getUserById } from '../../actions/profile';\r\nimport { useParams, useNavigate, Link } from 'react-router-dom';\r\nimport { getUserById } from '../../actions/profile';\r\n\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\n\r\nconst Input = styled('input')({\r\n  display: 'none',\r\n});\r\n\r\nconst MainProfile = ( ) => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const [userData, setUserData] = useState({\r\n        _id: '',\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        profileImg: '',\r\n        googleId: '',\r\n        imageUrl: '',\r\n        imageData: '',\r\n        linkedIn: '',\r\n        github: '',\r\n        social: '',\r\n        institude: ''\r\n    }\r\n);\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    // console.log(userData)\r\n    const setUserProfileData = (data) => {\r\n        setUserData(data[0]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserById(id, setUserProfileData));\r\n    }, [id]);\r\n\r\n    /// UserPost\r\n    const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n    const history = useNavigate();\r\n    \r\n    const recommendedPosts = posts.filter((id) => id === post.creatorEmail);\r\n    const loggeduser = JSON.parse(localStorage.getItem('profile'));\r\n    console.log(recommendedPosts)\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.card} raised elevation={6}>                \r\n                <div className={classes.centerI}>\r\n                    <Avatar className={classes.sizeAvatar} alt=\"User Image\" src={userData.imageUrl}>\r\n                    </Avatar>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <Typography style={{padding: '0px 2px'}} variant=\"h5\">{userData.name}</Typography>\r\n                    <div style={{ display: 'inline-block' }}>\r\n                        <a href={userData.linkedIn}> <LinkedInIcon></LinkedInIcon></a>\r\n                        <a href={userData.github}> <GitHubIcon></GitHubIcon></a>\r\n                        <a href={userData.social}> <FacebookIcon></FacebookIcon></a>\r\n                    </div>\r\n                </div>\r\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{userData.institude}</Typography>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainProfile;\r\n"]},"metadata":{},"sourceType":"module"}