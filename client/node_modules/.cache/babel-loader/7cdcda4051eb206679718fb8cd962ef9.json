{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nconst temp = (posts = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case FETCH_BY_SEARCH:\n      return 1;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    default:\n      return posts;\n  }\n};\n\nexport default temp;","map":{"version":3,"sources":["C:/Users/sabbi/OneDrive/Desktop/course/database_project_final/d_final/BlogAndArchieveUsingMERN-1/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","CREATE","UPDATE","DELETE","LIKE","temp","posts","action","type","payload","filter","post","_id","map"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,eAAnB,EAAoCC,MAApC,EAA4CC,MAA5C,EAAoDC,MAApD,EAA4DC,IAA5D,QAAwE,0BAAxE;;AAEA,MAAMC,IAAI,GAAG,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAuB;AAChC,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,SAAL;AACI,aAAOQ,MAAM,CAACE,OAAd;;AACJ,SAAKT,eAAL;AACI,aAAO,CAAP;;AACJ,SAAKC,MAAL;AACI,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACJ,SAAKN,MAAL;AACI,aAAOG,KAAK,CAACI,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAA3C,CAAP;;AACJ,SAAKL,IAAL;AACI,aAAOE,KAAK,CAACO,GAAN,CAAWF,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAxE,CAAP;;AACJ,SAAKT,MAAL;AACI,aAAOI,KAAK,CAACO,GAAN,CAAWF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaL,MAAM,CAACE,OAAP,CAAeG,GAA5B,GAAkCL,MAAM,CAACE,OAAzC,GAAmDE,IAAvE,CAAP;;AACJ;AACI,aAAOL,KAAP;AAdR;AAgBH,CAjBD;;AAmBA,eAAeD,IAAf","sourcesContent":["import { FETCH_ALL,FETCH_BY_SEARCH, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\r\n\r\nconst temp = (posts = [], action) =>{\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case FETCH_BY_SEARCH:\r\n            return 1;\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case LIKE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        default:\r\n            return posts;\r\n    }\r\n}\r\n\r\nexport default temp;"]},"metadata":{},"sourceType":"module"}