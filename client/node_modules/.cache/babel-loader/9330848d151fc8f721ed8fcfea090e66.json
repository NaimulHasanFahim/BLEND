{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\Form\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport { useNavigate } from 'react-router-dom';\nimport { createPost, updatePost } from '../../actions/posts';\nimport ChipInput from 'material-ui-chip-input';\nimport useStyles from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId,\n  userstate\n}) => {\n  _s();\n\n  var _user$result3;\n\n  const [postData, setPostData] = useState({\n    title: '',\n    message: '',\n    tags: [],\n    selectedFile: '',\n    creatorImgUrl: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  console.log(user);\n  const creatorImgUrl = user.imageUrl ? user.imageUrl : user.profileImg;\n  const creatorEmail = user.email;\n  console.log(creatorEmail);\n  const history = useNavigate(); // clears the post form to it's default state\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: '',\n      message: '',\n      tags: [],\n      selectedFile: ''\n    });\n  }; //populating the form with post data to update\n\n\n  useEffect(() => {\n    if (!(post === null || post === void 0 ? void 0 : post.title)) clear();\n    if (post) setPostData(post); // setting the new data to which got from the form const[postData,setPostData]\n  }, [post]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      var _user$result;\n\n      dispatch(createPost({ ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name,\n        creatorImgUrl: creatorImgUrl\n      }, history));\n      clear();\n    } else {\n      var _user$result2;\n\n      dispatch(updatePost(currentId, { ...postData,\n        name: user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name,\n        creatorImgUrl: creatorImgUrl\n      }));\n\n      for (let i = 0; i < 1000000; i++) {}\n\n      clear();\n      history(`/posts/${currentId}`);\n    }\n  };\n\n  if (!(user === null || user === void 0 ? void 0 : (_user$result3 = user.result) === null || _user$result3 === void 0 ? void 0 : _user$result3.name) && userstate == null) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 6,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        children: \"Please Sign in to share your thoughts and much more.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n  const handleAddChip = tag => {\n    setPostData({ ...postData,\n      tags: [...postData.tags, tag]\n    });\n  };\n\n  const handleDeleteChip = chipToDelete => {\n    setPostData({ ...postData,\n      tags: postData.tags.filter(tag => tag !== chipToDelete)\n    });\n  }; // if (userstate != null) {\n\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root} ${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: currentId ? `Updating \"${post.title}\"` : 'Share Your Thought and Experience'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(ChipInput, {\n          name: \"tags\",\n          variant: \"outlined\",\n          label: \"Tags\",\n          fullWidth: true,\n          value: postData.tags,\n          onAdd: chip => handleAddChip(chip),\n          onDelete: chip => handleDeleteChip(chip)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: ({\n            base64\n          }) => setPostData({ ...postData,\n            selectedFile: base64\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 44\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        variant: \"contained\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        className: classes.buttonClear,\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"YOLchHKltS7pNrDoGwWOh7BCxQg=\", false, function () {\n  return [useSelector, useDispatch, useStyles, useNavigate];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useNavigate","createPost","updatePost","ChipInput","useStyles","Form","currentId","setCurrentId","userstate","postData","setPostData","title","message","tags","selectedFile","creatorImgUrl","post","state","posts","find","_id","dispatch","classes","user","JSON","parse","localStorage","getItem","console","log","imageUrl","profileImg","creatorEmail","email","history","clear","handleSubmit","e","preventDefault","name","result","i","paper","handleAddChip","tag","handleDeleteChip","chipToDelete","filter","root","form","target","value","chip","fileInput","base64","buttonSubmit","buttonClear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId, userstate }) => {\r\n  const [postData, setPostData] = useState({ title: '', message: '', tags: [], selectedFile: '', creatorImgUrl: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  console.log(user)\r\n  const creatorImgUrl = (user.imageUrl ? user.imageUrl : user.profileImg)\r\n  const creatorEmail = user.email;\r\n  console.log(creatorEmail)\r\n  const history = useNavigate();\r\n  // clears the post form to it's default state\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' });\r\n  };\r\n\r\n  //populating the form with post data to update\r\n  useEffect(() => {\r\n    if (!post?.title) clear();\r\n    if (post) setPostData(post); // setting the new data to which got from the form const[postData,setPostData]\r\n  }, [post]);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.result?.name, creatorImgUrl:creatorImgUrl }, history));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name, creatorImgUrl:creatorImgUrl }));\r\n      for (let i = 0; i < 1000000; i++){\r\n        \r\n      }\r\n      clear();\r\n      history(`/posts/${currentId}`)\r\n    }\r\n  };\r\n  if (!user?.result?.name && userstate == null) {\r\n    return (\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign in to share your thoughts and much more.\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n  const handleAddChip = (tag) => {\r\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n  };\r\n  const handleDeleteChip = (chipToDelete) => {\r\n    setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\r\n  };\r\n\r\n  // if (userstate != null) {\r\n  return (\r\n\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Updating \"${post.title}\"` : 'Share Your Thought and Experience'}</Typography>\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <div>\r\n          <ChipInput\r\n          \r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags\"\r\n            fullWidth\r\n            value={postData.tags}\r\n            onAdd={(chip) => handleAddChip(chip)}\r\n            onDelete={(chip) => handleDeleteChip(chip)}\r\n          />\r\n        </div>\r\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" className={classes.buttonClear} size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n\r\n};\r\n\r\nexport default Form;"]},"metadata":{},"sourceType":"module"}