{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'http://localhost:5000'\n});\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem('profile')) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n  }\n\n  return req;\n});\nexport const fetchAllpdfs = () => API.get(`/posts/pdfs`);\nexport const addnewReasources = newPost => API.post('/posts/addpdf', newPost);\nexport const deletePdf = id => API.delete(`/posts/pdfs/delete/${id}`);\nexport const getIndividulaContributionById = id => API.get(`/posts/getbyId/${id}`);\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const fetchContributionByPostId = id => API.get(`/posts/contributedpost/${id}`);\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post('/posts', newPost);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const updateContribute = (id, updatedPost) => API.patch(`/posts/contribute/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, {\n  value\n});\nexport const signIn = formData => API.post('/user/signin', formData);\nexport const signUp = formData => API.post('/user/signup', formData);\nexport const getUsersById = id => API.get(`/profile/${id}`);\nexport const fetchSingleUserPosts = id => API.get(`/posts/single/${id}`);\nexport const updateUserProfile = (id, userData) => API.patch(`/user/update/${id}`, userData);","map":{"version":3,"sources":["C:/Users/sabbi/OneDrive/Desktop/nodejs/MERN_project/part4/New folder/BlogAndArchieveUsingMERN-1/client/src/api/index.js"],"names":["axios","API","create","baseURL","interceptors","request","use","req","localStorage","getItem","headers","Authorization","JSON","parse","token","fetchAllpdfs","get","addnewReasources","newPost","post","deletePdf","id","delete","getIndividulaContributionById","fetchPost","fetchContributionByPostId","fetchPosts","page","fetchPostsBySearch","searchQuery","search","tags","createPost","likePost","patch","updatePost","updatedPost","updateContribute","deletePost","comment","value","signIn","formData","signUp","getUsersById","fetchSingleUserPosts","updateUserProfile","userData"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({ baseURL: 'http://localhost:5000' });\r\n\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem('profile')) {\r\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\n\r\nexport const fetchAllpdfs = () => API.get(`/posts/pdfs`);\r\nexport const addnewReasources = (newPost) => API.post('/posts/addpdf', newPost);\r\nexport const deletePdf = (id) => API.delete(`/posts/pdfs/delete/${id}`);\r\n\r\nexport const getIndividulaContributionById = (id)=>API.get(`/posts/getbyId/${id}`)\r\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\r\nexport const fetchContributionByPostId = (id) => API.get(`/posts/contributedpost/${id}`);\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\nexport const fetchPostsBySearch = (searchQuery) => API.get(`/posts/search?searchQuery=${searchQuery.search || 'none'}&tags=${searchQuery.tags}`);\r\nexport const createPost = (newPost) => API.post('/posts', newPost);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\r\n\r\nexport const updateContribute = (id, updatedPost) => API.patch(`/posts/contribute/${id}`, updatedPost);\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const comment = (value, id) => API.post(`/posts/${id}/commentPost`, { value });\r\n\r\nexport const signIn = (formData) => API.post('/user/signin', formData);\r\nexport const signUp = (formData) => API.post('/user/signup', formData);\r\nexport const getUsersById = (id) => API.get(`/profile/${id}`);\r\nexport const fetchSingleUserPosts = (id) => API.get(`/posts/single/${id}`);\r\nexport const updateUserProfile = (id, userData) => API.patch(`/user/update/${id}`, userData);"]},"metadata":{},"sourceType":"module"}