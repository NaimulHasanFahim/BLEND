{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Documents\\\\BlogUsingMERN\\\\BlogAndArchieveUsingMERN\\\\client\\\\src\\\\components\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@mui/material'; // import LockIcon from '@mui/icons-material/Lock';\n\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport useStyles from './styles';\nimport Gicon from './icon';\nimport Box from '@material-ui/core/Box'; // import { TextField } from '@material-ui/core';\n\nimport Input from './Input';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { AUTH } from '../../constants/actionTypes';\nimport { signin, signup } from '../../actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = ({\n  setUserId\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState(initialState);\n\n  const handleShowPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); // console.log(\"Hello\")\n    // console.log(formData)\n\n    if (isSignup) {\n      dispatch(signup(formData, navigate, setUserId));\n    } else {\n      dispatch(signin(formData, navigate, setUserId));\n    }\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const switchMode = () => {\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n    alert(result.email);\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      setUserId(\"GLogIN\");\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n    console.log(\"Sign in failed.Try again\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: classes.paper,\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          className: classes.avatar,\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {\n            color: \"#ff675c\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: isSignup ? 'Sign Up' : 'Sign In'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.form,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                name: \"firstName\",\n                label: \"First Name\",\n                handleChange: handleChange,\n                autoFocus: true,\n                half: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                name: \"lastName\",\n                label: \"Last Name\",\n                handleChange: handleChange,\n                half: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              label: \"Email\",\n              handleChange: handleChange,\n              autoFocus: isSignup ? false : true,\n              type: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              label: \"Password\",\n              autocomplete: \"on\",\n              handleChange: handleChange,\n              type: showPassword ? \"text\" : \"password\",\n              handleShowPassword: handleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this), isSignup && /*#__PURE__*/_jsxDEV(Input, {\n              name: \"confirmPassword\",\n              autocomplete: \"on\",\n              label: \"Confirm Password\",\n              handleChange: handleChange,\n              type: \"password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              fullWidth: true,\n              variant: \"contained\",\n              className: classes.submit,\n              style: {\n                backgroundColor: '#9abf7a',\n                color: '#ffffff',\n                hover: {\n                  backgroundColor: '#5d6e7a'\n                }\n              },\n              children: isSignup ? \"Sign Up\" : \"Sign In\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n              clientId: \"802372011188-c3h6alkbm8dh88imcrhjd733su4q7kvr.apps.googleusercontent.com\",\n              render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n                style: {\n                  backgroundColor: '#ff675c',\n                  color: '#ffffff',\n                  hover: {\n                    backgroundColor: '#5d6e7a'\n                  }\n                },\n                className: classes.googleButton,\n                fullWidth: true,\n                onClick: renderProps.onClick,\n                disabled: renderProps.disabled,\n                startIcon: /*#__PURE__*/_jsxDEV(Gicon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 48\n                }, this),\n                variant: \"contained\",\n                children: \"Google Sign In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this),\n              onSuccess: googleSuccess,\n              onFailure: googleFailure,\n              cookiePolicy: \"single_host_origin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: switchMode,\n                style: {\n                  color: \"#334155\"\n                },\n                children: isSignup ? \"Already have an account ? Sign In\" : \"Don't have an account ? Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"hH1rzNT02LPgaojl6KIMlgVOCl4=\", false, function () {\n  return [useStyles, useDispatch, useNavigate];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Hp/Documents/BlogUsingMERN/BlogAndArchieveUsingMERN/client/src/components/Auth/Auth.js"],"names":["React","useState","GoogleLogin","Avatar","Button","Paper","Grid","Typography","Container","LockOutlinedIcon","useStyles","Gicon","Box","Input","useDispatch","useNavigate","AUTH","signin","signup","initialState","firstName","lastName","email","password","confirmPassword","Auth","setUserId","classes","dispatch","showPassword","setShowPassword","isSignup","setIsSignup","navigate","formData","setFormData","handleShowPassword","prevShowPassword","handleSubmit","e","preventDefault","handleChange","target","name","value","switchMode","prevIsSignup","googleSuccess","res","result","profileObj","token","tokenId","alert","type","data","error","console","log","googleFailure","paper","avatar","form","submit","backgroundColor","color","hover","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@mui/material';\r\n// import LockIcon from '@mui/icons-material/Lock';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport useStyles from './styles'\r\nimport Gicon from './icon'\r\nimport Box from '@material-ui/core/Box';\r\n// import { TextField } from '@material-ui/core';\r\nimport Input from './Input'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AUTH } from '../../constants/actionTypes';\r\nimport {signin, signup} from '../../actions/auth'\r\n\r\nconst initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\n\r\nconst Auth = ({setUserId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();                \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState(initialState);\r\n    \r\n    const handleShowPassword = () => {\r\n        setShowPassword((prevShowPassword) => !prevShowPassword)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"Hello\")\r\n        // console.log(formData)\r\n        if (isSignup) {\r\n            dispatch(signup(formData,navigate, setUserId))\r\n        }\r\n        else {\r\n            dispatch(signin(formData, navigate, setUserId))\r\n\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup)\r\n        setShowPassword(false)\r\n    }\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        alert(result.email);\r\n\r\n        try {\r\n            dispatch({ type: AUTH, data: { result, token } });\r\n            setUserId(\"GLogIN\")\r\n            navigate('/');\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const googleFailure = (error) => {\r\n        console.log(error)\r\n        console.log(\"Sign in failed.Try again\")\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon color=\"#ff675c\" />\r\n                    </Avatar>\r\n                    <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {isSignup && (\r\n                                    <>\r\n                                        <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                                        <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half/>\r\n                                    </>\r\n                            )}\r\n                            <Input name=\"email\" label=\"Email\" handleChange={handleChange} autoFocus={isSignup ?false: true} type=\"email\" />\r\n                            <Input name=\"password\" label=\"Password\" autocomplete=\"on\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                            {isSignup &&\r\n                                <Input name=\"confirmPassword\" autocomplete=\"on\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\"/>\r\n                            }\r\n                        </Grid>\r\n                        <Box pt={2}>\r\n                            <Button type=\"submit\" fullWidth variant=\"contained\" className={classes.submit} style={{backgroundColor: '#9abf7a',color: '#ffffff',hover: {backgroundColor: '#5d6e7a',}}} >{isSignup ? \"Sign Up\" : \"Sign In\"}</Button>\r\n                        </Box>\r\n\r\n                        <Box pt={2}>\r\n                            <GoogleLogin\r\n                            clientId=\"802372011188-c3h6alkbm8dh88imcrhjd733su4q7kvr.apps.googleusercontent.com\"\r\n                            render={(renderProps) => (\r\n                                <Button style={{backgroundColor: '#ff675c',color: '#ffffff',hover: {backgroundColor: '#5d6e7a',}}}\r\n                                    className={classes.googleButton}\r\n                                    fullWidth\r\n                                    onClick={renderProps.onClick}\r\n                                    disabled={renderProps.disabled}\r\n                                    startIcon={<Gicon />}\r\n                                    variant=\"contained\"\r\n                                >Google Sign In</Button>\r\n                            )}\r\n                            onSuccess={googleSuccess}\r\n                            onFailure={googleFailure}\r\n                            cookiePolicy=\"single_host_origin\"\r\n                        />\r\n                        </Box>\r\n                        \r\n                       <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Button onClick={switchMode} style={{color:\"#334155\"}}>\r\n                                    {isSignup ? \"Already have an account ? Sign In\" : \"Don't have an account ? Sign Up\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n"]},"metadata":{},"sourceType":"module"}