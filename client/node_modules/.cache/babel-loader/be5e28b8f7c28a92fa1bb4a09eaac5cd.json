{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes.js';\nimport * as api from '../api/index'; //Action Creators\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: {\n        data\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    // console.log(post);\n    const {\n      data\n    } = await api.createPost(post);\n    console.log(data);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  const user = JSON.parse(localStorage.getItem('profile'));\n\n  try {\n    const {\n      data\n    } = await api.likePost(id, user === null || user === void 0 ? void 0 : user.token);\n    dispatch({\n      type: 'LIKE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // export const likePost = (id) => async (dispatch) => {\n//   try {\n//     const { data } = await api.likePost(id);\n//     dispatch({ type: UPDATE, payload: data });\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n    console.log(\"do you rally want to delete the post\");\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["C:/Users/sabbi/OneDrive/Desktop/course/database_project_final/d_final/BlogAndArchieveUsingMERN-1/client/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","getPostsBySearch","searchQuery","START_LOADING","fetchPostsBySearch","FETCH_BY_SEARCH","END_LOADING","createPost","post","message","updatePost","id","likePost","user","JSON","parse","localStorage","getItem","token","deletePost"],"mappings":"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","sourcesContent":["import {FETCH_ALL,CREATE, UPDATE, DELETE,} from '../constants/actionTypes.js';\r\nimport * as api from '../api/index';\r\n\r\n//Action Creators\r\nexport const getPosts = () => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.fetchPosts();\r\n\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const { data: { data } } = await api.fetchPostsBySearch(searchQuery);\r\n\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: { data } });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const createPost = (post) => async (dispatch) => {\r\n  try {\r\n    // console.log(post);\r\n    const { data } = await api.createPost(post);\r\n    console.log(data)\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n     console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error.message);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  try {\r\n    const { data } = await api.likePost(id, user?.token);\r\n\r\n    dispatch({ type: 'LIKE', payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n// export const likePost = (id) => async (dispatch) => {\r\n//   try {\r\n//     const { data } = await api.likePost(id);\r\n\r\n//     dispatch({ type: UPDATE, payload: data });\r\n\r\n//   } catch (error) {\r\n//     console.log(error.message);\r\n//   }\r\n\r\n// };\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n    console.log(\"do you rally want to delete the post\");\r\n  } catch (error) {\r\n    console.log(error.message); \r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}