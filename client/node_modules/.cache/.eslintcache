[{"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\index.js":"1","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\App.js":"2","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\index.js":"3","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\MainProfile.js":"4","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Navbar\\Navbar.js":"5","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\Auth.js":"6","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Home\\Home.js":"7","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\PostDetails.jsx":"8","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Form\\Create_post.jsx":"9","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\profile.js":"10","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\auth.js":"11","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\posts.js":"12","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\FormDailog.js":"13","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\icon.js":"14","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\styles.js":"15","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\Input.js":"16","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\styles.js":"17","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\actions\\auth.js":"18","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Navbar\\styles.js":"19","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\constants\\actionTypes.js":"20","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\actions\\profile.js":"21","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Home\\styles.js":"22","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\Posts.js":"23","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\actions\\posts.js":"24","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\styles.js":"25","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\Dailog.js":"26","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Pagination.jsx":"27","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Form\\Form.js":"28","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\CommentSection.jsx":"29","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\api\\index.js":"30","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\formStyle.js":"31","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\styles.js":"32","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\styles.js":"33","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\formStyle.js":"34","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Form\\styles.js":"35","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\Post\\Post.js":"36","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\Post\\styles.js":"37","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\ContributeDailog.js":"38"},{"size":702,"mtime":1639295784612,"results":"39","hashOfConfig":"40"},{"size":1618,"mtime":1639134530480,"results":"41","hashOfConfig":"40"},{"size":199,"mtime":1639130992724,"results":"42","hashOfConfig":"40"},{"size":6425,"mtime":1639304644647,"results":"43","hashOfConfig":"40"},{"size":2342,"mtime":1639304944081,"results":"44","hashOfConfig":"40"},{"size":7295,"mtime":1639145038953,"results":"45","hashOfConfig":"40"},{"size":4159,"mtime":1639295784582,"results":"46","hashOfConfig":"40"},{"size":10450,"mtime":1639311655863,"results":"47","hashOfConfig":"40"},{"size":992,"mtime":1639295784451,"results":"48","hashOfConfig":"40"},{"size":371,"mtime":1639261583428,"results":"49","hashOfConfig":"40"},{"size":681,"mtime":1639261563245,"results":"50","hashOfConfig":"40"},{"size":1809,"mtime":1639315744611,"results":"51","hashOfConfig":"40"},{"size":4489,"mtime":1639304694094,"results":"52","hashOfConfig":"40"},{"size":512,"mtime":1638559227971,"results":"53","hashOfConfig":"40"},{"size":672,"mtime":1638559870171,"results":"54","hashOfConfig":"40"},{"size":1208,"mtime":1638082924699,"results":"55","hashOfConfig":"40"},{"size":2214,"mtime":1639258135251,"results":"56","hashOfConfig":"40"},{"size":1172,"mtime":1639262874278,"results":"57","hashOfConfig":"40"},{"size":1773,"mtime":1638898991493,"results":"58","hashOfConfig":"40"},{"size":741,"mtime":1639315618976,"results":"59","hashOfConfig":"40"},{"size":616,"mtime":1639261598664,"results":"60","hashOfConfig":"40"},{"size":1029,"mtime":1639295784585,"results":"61","hashOfConfig":"40"},{"size":1123,"mtime":1638980936500,"results":"62","hashOfConfig":"40"},{"size":4034,"mtime":1639387799581,"results":"63","hashOfConfig":"40"},{"size":866,"mtime":1638886905533,"results":"64","hashOfConfig":"40"},{"size":5383,"mtime":1639313328511,"results":"65","hashOfConfig":"40"},{"size":967,"mtime":1638532717237,"results":"66","hashOfConfig":"40"},{"size":4042,"mtime":1639305031187,"results":"67","hashOfConfig":"40"},{"size":2196,"mtime":1638611287242,"results":"68","hashOfConfig":"40"},{"size":1621,"mtime":1639385345423,"results":"69","hashOfConfig":"40"},{"size":704,"mtime":1639259486304,"results":"70","hashOfConfig":"40"},{"size":278,"mtime":1634362168692,"results":"71","hashOfConfig":"40"},{"size":360,"mtime":1638608078314,"results":"72","hashOfConfig":"40"},{"size":704,"mtime":1638886243562,"results":"73","hashOfConfig":"40"},{"size":880,"mtime":1639295784505,"results":"74","hashOfConfig":"40"},{"size":4560,"mtime":1639304983208,"results":"75","hashOfConfig":"40"},{"size":1207,"mtime":1638909567817,"results":"76","hashOfConfig":"40"},{"size":4363,"mtime":1639388340497,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},"1ej1rt9",{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"81"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"81"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"81"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"81"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"81"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"81"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"81"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"81"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\index.js",["165","166"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { reducers } from './reducers';\r\nimport App from './App';\r\nimport './index.css';\r\nimport \"slick-carousel/slick/slick.css\"; \r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport Viewer, { Worker } from '@phuocng/react-pdf-viewer';\r\n \r\nimport '@phuocng/react-pdf-viewer/cjs/react-pdf-viewer.css';\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n \r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root'));",["167","168"],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\App.js",["169"],"import React, { useState} from 'react';\r\nimport { Container} from '@material-ui/core';\r\nimport { BrowserRouter,Route, Routes ,Navigate} from 'react-router-dom';\r\n\r\nimport Home from './components/Home/Home';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport Auth from './components/Auth/Auth'\r\nimport PostDetails from './components/PostDetails/PostDetails';\r\nimport Create_post from './components/Form/Create_post';\r\nimport MainProfile from './components/Profile/MainProfile';\r\nconst App = () => {\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  const [userstate, setuserstate] = useState(user)\r\n\r\n  const setUserId = (val) => {\r\n    setuserstate(val);\r\n    // console.log(userstate);\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Container maxWidth=\"lg\">\r\n        <Navbar setUserId={setUserId} />\r\n        <Routes>\r\n          <Route path=\"/profile/:id\" element={<MainProfile/>} />\r\n          <Route path=\"/\" element={<Navigate to='/posts'/>} />\r\n          {/* <Route path=\"/editprofile\" element={<MainProfile/>} /> */}\r\n          <Route path=\"/posts\" element={<Home userstate={userstate}/>} />\r\n          <Route path=\"/posts/search\" element={<Home userstate={userstate}/>} />\r\n          <Route path=\"/posts/:id\" element={<PostDetails />} />\r\n          <Route path=\"/auth\" element={<Auth setUserId={setUserId}/>}/>\r\n          <Route path=\"/addpost\" element={<Create_post />} />\r\n\r\n\r\n          {/* <Route path=\"/auth\" element={ (user ? <Navigate to='/posts'/> : <Auth setUserId={setUserId}/> )}/> */}\r\n        </Routes>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\index.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\MainProfile.js",["170","171"],"import React, { useState, useEffect } from 'react';\r\nimport { Card,CardContent, Typography, Avatar, Button, Divider,Paper, Menu, MenuItem } from '@material-ui/core';\r\n// import { useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch} from 'react-redux';\r\nimport useStyles from './styles';\r\nimport { useParams, useNavigate} from 'react-router-dom';\r\nimport { getUserById } from '../../actions/profile';\r\nimport { getSingleUserPosts } from '../../actions/posts';\r\nimport GitHubIcon from '@mui/icons-material/GitHub';\r\nimport LinkedInIcon from '@mui/icons-material/LinkedIn';\r\nimport FacebookIcon from '@mui/icons-material/Facebook';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport EditFormDialogs from './FormDailog';\r\n\r\n\r\nconst initalUserData = {\r\n        _id: '',\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        profileImg: '',\r\n        googleId: '',\r\n        imageUrl: '',\r\n        imageData: '',\r\n        linkedIn: '',\r\n        github: '',\r\n        social: '',\r\n        institude: ''\r\n    }\r\nconst MainProfile = ( ) => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    const [userData, setUserData] = useState(initalUserData);\r\n    const [allposts, setAllPosts] = useState([])\r\n    \r\n    const history = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const { id } = useParams();\r\n    const classes = useStyles();\r\n    // console.log(userData)\r\n    const setUserProfileData = (data) => {\r\n        setUserData(data[0]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserById(id, setUserProfileData));\r\n        dispatch(getSingleUserPosts(id, setAllPosts))\r\n    }, [id]);\r\n\r\n    /// UserPost\r\n    // console.log(allposts)\r\n    // const loggeduser = JSON.parse(localStorage.getItem('profile'));\r\n    const openPost = (_id) => history(`/posts/${_id}`);\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n    const handleCloseEdit = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    }\r\n\r\n    const handleCloseHome = () => {\r\n        setAnchorEl(null);\r\n        history('/')\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Card className={classes.card} raised elevation={6}>                \r\n                <div className={classes.centerI}>\r\n                    <Avatar className={classes.sizeAvatar} alt=\"User Image\" src={userData.imageData}>\r\n                    </Avatar>\r\n                </div>\r\n                <div className={classes.details}>\r\n                    <Typography style={{padding: '0px 2px'}} variant=\"h5\">{userData.name}</Typography>\r\n                    <div style={{ display: 'inline-block' }}>\r\n                        <a href={userData.linkedIn}> <LinkedInIcon></LinkedInIcon></a>\r\n                        <a href={userData.github}> <GitHubIcon></GitHubIcon></a>\r\n                        <a href={userData.social}> <FacebookIcon></FacebookIcon></a>\r\n                    </div>\r\n                    {(user?.result?.email === id) ? (\r\n                    <div >\r\n                        <Button onClick={handleClick}\r\n                        style={{ color: '#334155' }}\r\n                        size=\"small\">\r\n                            <MoreVertIcon fontSize=\"medium\" />\r\n                            </Button>\r\n                            <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)}>\r\n                                <MenuItem onClick={handleCloseEdit}> <EditFormDialogs EditData={userData}> </EditFormDialogs></MenuItem>\r\n                                <MenuItem onClick={handleCloseHome}>Back to Home</MenuItem>\r\n                                <MenuItem onClick={handleClose}>Close</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    ) : (\r\n                        <div >\r\n                            <Button onClick={handleClick}\r\n                                style={{ color: '#334155' }}\r\n                                size=\"small\">\r\n                                <MoreVertIcon fontSize=\"medium\" />\r\n                            </Button>\r\n                            <Menu anchorEl={anchorEl} keepMounted open={Boolean(anchorEl)}>\r\n                                <MenuItem onClick={handleCloseHome}>Back to Home</MenuItem>\r\n                                <MenuItem onClick={handleClose}>Close</MenuItem>\r\n                            </Menu>\r\n                        </div>\r\n                    )}\r\n\r\n                </div>\r\n                <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{userData.institude}</Typography>\r\n            </Card>\r\n            <Paper style={{borderRadius: '15px' }} elevation={8}>\r\n                {!!allposts.length && (\r\n                    <div className={classes.section}>\r\n                        <Typography gutterBottom variant=\"h5\">{userData.name} posted :</Typography>\r\n                        <Divider />\r\n                        <div className={classes.allposts}>\r\n                            {allposts.map(({ title, name, message, likes, _id }) => (\r\n                                <Card className={classes.cardpost} style={{ backgroundColor: \"#ffffff\", margin: \"5px 5px\" }} elevation={6}>\r\n                                    <div style={{ width: \"100%\", height: \"100%\", margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                                        <Typography gutterBottom variant=\"h6\" style={{ fontWeight: 'bold' }}>{title}</Typography>\r\n                                        <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                                        <CardContent>\r\n                                            <Typography variant=\"subtitle2\" color=\"textSecondary\" noWrap={true}  >{message}</Typography>\r\n                                        </CardContent>\r\n                                        <Typography gutterBottom style={{ fontWeight: 'bold' }} variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                                    </div>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainProfile;\r\n","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Navbar\\Navbar.js",["172"],"import React, { useState, useEffect } from 'react';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\r\nimport { Link, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\nimport memoriesLogo from '../../images/logo.png';\r\nimport * as actionType from '../../constants/actionTypes';\r\nimport useStyles from './styles';\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const classes = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    navigate('/');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n  \r\n  return (\r\n    <AppBar className={classes.appBar} color=\"inherit\">\r\n      <Link to=\"/\" style={{textDecoration: 'none'}} className={classes.brandContainer}>\r\n        {/* <img component={Link} to=\"/\" src={memoriesText} alt=\"icon\" height=\"45px\" /> */}\r\n        <Typography className={classes.logo}>BLEND</Typography>\r\n        <img className={classes.image} src={memoriesLogo} alt=\"icon\" height=\"40px\" />\r\n      </Link>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user.result.imageData}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Link to={`/profile/${user.result.email}`} style={{textDecoration: 'none', color: \"black\"}} className={classes.brandContainer}>\r\n              <Typography className={classes.userName} variant=\"h5\">{user?.result.name}</Typography>\r\n            </Link>\r\n            <Button variant=\"contained\" className={classes.logout} onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" className={classes.signin}>Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\n","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\Auth.js",["173"],"import React, { useState } from 'react'\r\nimport { GoogleLogin } from 'react-google-login'\r\nimport { Avatar, Button, Paper, Grid, Typography, Container, Form } from '@mui/material';\r\n// import LockIcon from '@mui/icons-material/Lock';\r\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\r\nimport useStyles from './styles'\r\nimport Gicon from './icon'\r\nimport Box from '@material-ui/core/Box';\r\n// import { TextField } from '@material-ui/core';\r\nimport Input from './Input'\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { AUTH } from '../../constants/actionTypes';\r\nimport {signin, signup} from '../../actions/auth'\r\n\r\n// const initialState = {firstName: '', lastName: '', email: '', password: '', confirmPassword: ''};\r\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' , imageUrl: '' ,imageData: '' ,linkedIn: '' ,github: '' ,social: '' ,institude: '' };\r\n\r\nconst Auth = ({setUserId}) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();                \r\n    const [showPassword, setShowPassword] = useState(false);\r\n    const [isSignup, setIsSignup] = useState(false);\r\n    const navigate = useNavigate();\r\n    const [formData, setFormData] = useState(initialState);\r\n    \r\n    const handleShowPassword = () => {\r\n        setShowPassword((prevShowPassword) => !prevShowPassword)\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        // console.log(\"Hello\")\r\n        // console.log(formData)\r\n        if (isSignup) {\r\n            dispatch(signup(formData,navigate, setUserId))\r\n        }\r\n        else {\r\n            dispatch(signin(formData, navigate, setUserId))\r\n\r\n        }\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    const switchMode = () => {\r\n        setIsSignup((prevIsSignup) => !prevIsSignup)\r\n        setShowPassword(false)\r\n    }\r\n\r\n    const googleSuccess = async (res) => {\r\n        const result = res?.profileObj;\r\n        const token = res?.tokenId;\r\n        console.log(result.imageUrl);\r\n        const formData = { firstName: result.givenName, lastName: result.familyName, email: result.email, password: '', confirmPassword: '', imageUrl: result.imageUrl, imageData: '', linkedIn: '', github: '', social: '', institude: '', googleId: result.googleId };\r\n        // console.log(initialState)\r\n        dispatch(signup(formData,navigate, setUserId))\r\n        //  dispatch(signup({result},navigate, setUserId))\r\n        try {\r\n            dispatch({ type: AUTH, data: { result, token } });\r\n            setUserId(\"GLogIN\")\r\n            navigate('/');\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    const googleFailure = (error) => {\r\n        console.log(error)\r\n        console.log(\"Sign in failed.Try again\")\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Avatar className={classes.avatar}>\r\n                        <LockOutlinedIcon color=\"#ff675c\" />\r\n                    </Avatar>\r\n                    <Typography variant=\"h5\">{isSignup ? 'Sign Up' : 'Sign In'}</Typography>\r\n                    <form className={classes.form} onSubmit={handleSubmit}>\r\n                        <Grid container spacing={2}>\r\n                            {isSignup && (\r\n                                    <>\r\n                                        <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\r\n                                        <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half/>\r\n                                    </>\r\n                            )}\r\n                            <Input name=\"email\" label=\"Email\" handleChange={handleChange} autoFocus={isSignup ?false: true} type=\"email\" />\r\n                            <Input name=\"password\" label=\"Password\" autocomplete=\"on\" handleChange={handleChange} type={showPassword ? \"text\" : \"password\"} handleShowPassword={handleShowPassword} />\r\n                            \r\n                            {isSignup &&\r\n                            <Input name=\"confirmPassword\" autocomplete=\"on\" label=\"Confirm Password\" handleChange={handleChange} type=\"password\" />    \r\n                            }\r\n                        </Grid>\r\n                        <Box pt={2}>\r\n                            <Button type=\"submit\" fullWidth variant=\"contained\" className={classes.submit} style={{backgroundColor: '#9abf7a',color: '#ffffff',hover: {backgroundColor: '#5d6e7a',}}} >{isSignup ? \"Sign Up\" : \"Sign In\"}</Button>\r\n                        </Box>\r\n                        {isSignup &&\r\n                                <Box pt={2}>\r\n                                    <form action=\"http://localhost:5000/auth/google\">\r\n                                        <Button style={{ backgroundColor: '#ff675c', color: '#ffffff', hover: { backgroundColor: '#5d6e7a', } }}\r\n                                    className={classes.googleButton}\r\n                                    fullWidth type=\"submit\" startIcon={<Gicon />}\r\n                                            variant=\"contained\" >Sign Up with Google</Button>\r\n                                    </form>\r\n                                </Box> \r\n                            }\r\n                        {!isSignup &&\r\n                            <Box pt={2}>\r\n                                <GoogleLogin\r\n                                    clientId=\"802372011188-c3h6alkbm8dh88imcrhjd733su4q7kvr.apps.googleusercontent.com\"\r\n                                    render={(renderProps) => (\r\n                                        <Button style={{ backgroundColor: '#ff675c', color: '#ffffff', hover: { backgroundColor: '#5d6e7a', } }}\r\n                                            className={classes.googleButton}\r\n                                            fullWidth\r\n                                            onClick={renderProps.onClick}\r\n                                            disabled={renderProps.disabled}\r\n                                            startIcon={<Gicon />}\r\n                                            variant=\"contained\"\r\n                                        >Google Sign In</Button>\r\n                                    )}\r\n                                    onSuccess={googleSuccess}\r\n                                    onFailure={googleFailure}\r\n                                    cookiePolicy=\"single_host_origin\"\r\n                                />\r\n                            </Box>}\r\n                        <Grid container justifyContent=\"flex-end\">\r\n                            <Grid item>\r\n                                <Button onClick={switchMode} style={{color:\"#334155\"}}>\r\n                                    {isSignup ? \"Already have an account ? Sign In\" : \"Don't have an account ? Sign Up\"}\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </Paper>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth;\r\n","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Home\\Home.js",["174","175"],"\r\n\r\nimport React, { useState } from 'react';\r\nimport {Container, Grid, AppBar, TextField, Button, Paper, Fab,Typography} from '@material-ui/core';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport { getPostsBySearch } from '../../actions/posts';\r\nimport Posts from '../Posts/Posts';\r\nimport Pagination from '../Pagination';\r\nimport useStyles from './styles';\r\nimport { Grow } from '@mui/material';\r\n\r\nfunction useQuery() {\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\nconst Home = ({userstate}) => {\r\n  const classes = useStyles();\r\n  const query = useQuery();\r\n  const page = query.get('page') || 1;\r\n  const searchQuery = query.get('searchQuery');\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  const [currentId, setCurrentId] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [tags, setTags] = useState([]);\r\n  const history = useNavigate();\r\n\r\n  const searchPost = () => {\r\n    if ((search === '' || search === 'Add keyword or tags') && tags.length === 0) {\r\n      setSearch(\"Add keyword or tags\")\r\n    }\r\n    else {\r\n      if (search.trim() !== '' || tags) {\r\n        dispatch(getPostsBySearch({ search, tags: tags.join(',') }));\r\n        history(`/posts/search?searchQuery=${search || 'none'}&tags=${tags.join(',')}`);\r\n      } else {\r\n        history('/');\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      searchPost();\r\n    }\r\n  };\r\n  if(!user?.result?.name ){\r\n    history(\"/posts\");\r\n  }\r\n  const create_post = () => {\r\n\r\n    // dispatch({ type: actionType.CREATE });\r\n\r\n    \r\n\r\n    history('/addpost');\r\n\r\n\r\n  };\r\n \r\n  const handleAddChip = (tag) => setTags([...tags, tag]);\r\n\r\n  const handleDeleteChip = (chipToDelete) => setTags(tags.filter((tag) => tag !== chipToDelete));\r\n\r\n  return (\r\n    <Grow in>\r\n\r\n      <Container maxWidth=\"xl\">\r\n        <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3} className={classes.gridContainer}>\r\n          <Grid item xs={12} sm={6} md={9}>\r\n            <Posts setCurrentId={setCurrentId} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppBar className={classes.appBarSearch} color=\"inherit\">\r\n              {\r\n                \r\n                  <div>\r\n                  <Fab className={classes.fab_button} variant=\"extended\" onClick={create_post}>\r\n    \r\n                    <AddIcon />\r\n    \r\n                    Create\r\n                  </Fab>\r\n                </div>\r\n                \r\n\r\n              }\r\n              <form className={classes.form} >\r\n                <TextField onKeyDown={handleKeyPress} name=\"search\" variant=\"outlined\" label=\"Search by text\" fullWidth value={search} onChange={(e) => setSearch(e.target.value)} />\r\n                <ChipInput fullWidth\r\n                  style={{ margin: '10px 0' }}\r\n                  value={tags}\r\n                  onAdd={(chip) => handleAddChip(chip)}\r\n                  onDelete={(chip) => handleDeleteChip(chip)}\r\n                  label=\"Search Tags\"\r\n                  variant=\"outlined\"\r\n                />\r\n                <div className={classes.divBtn}>\r\n                  <Button onClick={searchPost} className={classes.searchButton} fullWidth variant=\"contained\">Search</Button>\r\n                </div>\r\n\r\n              </form>\r\n\r\n\r\n              {/* <Form currentId={currentId} setCurrentId={setCurrentId} /> */}\r\n              {(!searchQuery && !tags.length) && (\r\n                <Paper className={classes.pagination} elevation={6}>\r\n                  <Pagination page={page} />\r\n                </Paper>\r\n              )}\r\n            </AppBar>\r\n\r\n            {/* <div>\r\n              <Fab className={classes.fab_button} variant=\"extended\" onClick={create_post}>\r\n\r\n                <AddIcon />\r\n\r\n                Create\r\n              </Fab>\r\n            </div> */}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\PostDetails.jsx",["176","177","178"],"import React, { useEffect, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { Card, CardContent, Paper, Typography, CircularProgress, Divider, Button, Menu, MenuItem } from '@material-ui/core/';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport { getPost, getPostsBySearch } from '../../actions/posts';\r\nimport useStyles from './styles';\r\nimport CommentSection from './CommentSection';\r\nimport { deletePost } from '../../actions/posts';\r\nimport CustomizedDialogs from './Dailog';\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport axios from 'axios';\r\n// import Viewer, { Worker } from '@phuocng/react-pdf-viewer';\r\nimport ContributeDailog from './ContributeDailog';\r\n\r\n\r\n\r\nconst Post = () => {\r\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const history = useNavigate();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1\r\n  };\r\n\r\n  const handleClick = event => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleCloseEdit = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const handleCloseDelete = () => {\r\n    setAnchorEl(null);\r\n    dispatch(deletePost(post._id));\r\n    history('/')\r\n  }\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  }\r\n\r\n  const handleCloseHome = () => {\r\n    setAnchorEl(null);\r\n    history('/')\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\r\n    }\r\n\r\n  }, [post]);\r\n\r\n  if (!post) return null;\r\n\r\n  const openPost = (_id) => history(`/posts/${_id}`);\r\n  // console.log(posts);\r\n  if (isLoading) {\r\n    return (\r\n      <div>\r\n        <CircularProgress size=\"3em\" style={{ color: '#ff675c', position: 'absolute' }} />\r\n        <Paper elevation={6} className={classes.loadingPaper}>\r\n          <Card elevation={6} style={{ backgroundColor: '#ebe5ff', borderRadius: '10px' }}> <Typography style={{ margin: '10px 10px' }} variant=\"h4\">Loading....</Typography></Card>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  function download() {\r\n    axios({\r\n      url: post.selectedFile,\r\n      method: 'GET',\r\n      responseType: 'blob',\r\n    }).then((response) => {\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'file.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Paper style={{ padding: '20px', marginBottom: '3px', borderRadius: '15px' }} elevation={6}>\r\n\r\n\r\n\r\n\r\n        <div className={classes.card}>\r\n          <div className={classes.section}>\r\n            {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) ? (\r\n              <div >\r\n                <Typography variant=\"h3\" component=\"h2\">{post.title}\r\n                  <Button onClick={handleClick}\r\n                    style={{ color: '#334155' }}\r\n                    size=\"small\"\r\n                  >\r\n                    <MoreHorizIcon fontSize=\"medium\" />\r\n                  </Button>\r\n                </Typography>\r\n                <Menu\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                >\r\n\r\n                  <MenuItem onClick={handleCloseEdit}> <CustomizedDialogs currentId={post._id}> </CustomizedDialogs></MenuItem>\r\n                  <MenuItem onClick={handleCloseDelete}>Delete</MenuItem>\r\n                  <MenuItem onClick={handleCloseHome}>Back to Home</MenuItem>\r\n                  <MenuItem onClick={handleClose}>Close</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            ) : (\r\n              <div >\r\n                <Typography variant=\"h3\" component=\"h2\">{post.title}\r\n                  <Button onClick={handleClick}\r\n                    style={{ color: '#334155' }}\r\n                    size=\"small\"\r\n                  >\r\n                    <MoreHorizIcon fontSize=\"medium\" />\r\n                  </Button>\r\n                </Typography>\r\n                <Menu\r\n                  anchorEl={anchorEl}\r\n                  keepMounted\r\n                  open={Boolean(anchorEl)}\r\n                  onClose={handleClose, handleCloseEdit, handleCloseDelete, handleCloseHome}\r\n                >\r\n                  <MenuItem onClick={handleCloseHome}>Back to Home</MenuItem>\r\n                  <MenuItem onClick={handleClose}>Close</MenuItem>\r\n                </Menu>\r\n              </div>\r\n            )}\r\n\r\n            <Typography gutterBottom variant=\"h6\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">{post.message}</Typography>\r\n            <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n            <Typography variant=\"body1\">{moment(post.createdAt).fromNow()}</Typography>\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </Paper>\r\n\r\n      <Card style={{ padding: '20px', marginBottom: '3px', borderRadius: '15px' }} elevation={6}>\r\n        <CardContent>\r\n          <button onClick={download}>\r\n            Download Image\r\n          </button>\r\n        </CardContent>\r\n\r\n        <CardContent>\r\n\r\n          <Slider {...settings}>\r\n\r\n            <div>\r\n              {post.selectedFile ?\r\n                (<div className={classes.imageSection}>\r\n                  <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n                </div>) : <div></div>}\r\n            </div>\r\n\r\n            {/* <div>\r\n              {post.selectedFile ?\r\n                (<div className={classes.imageSection}>\r\n                  <Worker >\r\n                    <div style={{ height: '750px' }}>\r\n                      <Viewer fileUrl=\"./fb1e268d29f29a34.pdf\" />\r\n                    </div>\r\n                  </Worker>\r\n                  {/* <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} /> */}\r\n            {/* </div>) : <div></div>} */}\r\n            {/* </div>  */}\r\n            {post.selectedFile ?\r\n              (<div className={classes.imageSection}>\r\n                <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n              </div>) : <div></div>}\r\n\r\n\r\n            {post.selectedFile ?\r\n              (<div className={classes.imageSection}>\r\n                <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n              </div>) : <div></div>}\r\n\r\n\r\n          </Slider>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      <Paper style={{ padding: '20px', borderRadius: '15px' }} elevation={6}>\r\n        <div className={classes.card}>\r\n          <div className={classes.section}>\r\n            <Typography>Wanna contribute?<ContributeDailog currentId={post._id} /></Typography>\r\n            {/* <Divider style={{ margin: '20px 0' }} /> */}\r\n          </div>\r\n        </div>\r\n        <div className={classes.card}>\r\n          <div className={classes.section}>\r\n            {(user?.result?.googleId || user?.result?._id) ? (\r\n              <div className=\"Parent\">\r\n                <Divider style={{ margin: '10px 0' }} />\r\n                <CommentSection post={post} />\r\n                <Divider style={{ margin: '20px 0' }} /></div>) : (<div></div>)}\r\n          </div>\r\n        </div>\r\n        <div className={classes.card}>\r\n          {/* {post.selectedFile ?\r\n          (<div className={classes.imageSection}>\r\n            <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} />\r\n          </div>) : <div></div>} */}\r\n          {/* <div className={classes.imageSection}> */}\r\n          {/* <img className={classes.media} src={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} alt={post.title} /> */}\r\n          {/* </div> */}\r\n        </div>\r\n        {\r\n          !!recommendedPosts.length && (\r\n            <div className={classes.section}>\r\n              <Typography gutterBottom variant=\"h5\">You might also like:</Typography>\r\n              <Divider />\r\n              <div className={classes.recommendedPosts}>\r\n\r\n                {recommendedPosts.map(({ title, name, message, likes, selectedFile, _id }) => (\r\n                  <Card className={classes.card} style={{ backgroundColor: \"#ffffff\", margin: \"5px 5px\" }} elevation={6}>\r\n\r\n                    <div style={{ width: \"100%\", height: \"100%\", margin: '20px', cursor: 'pointer' }} onClick={() => openPost(_id)} key={_id}>\r\n                      <Typography gutterBottom variant=\"h6\" style={{ fontWeight: 'bold' }}>{title}</Typography>\r\n                      <Typography gutterBottom variant=\"subtitle2\">{name}</Typography>\r\n                      <CardContent>\r\n                        <Typography variant=\"subtitle2\" color=\"textSecondary\" noWrap={true}  >{message}</Typography>\r\n                      </CardContent>\r\n                      <Typography gutterBottom style={{ fontWeight: 'bold' }} variant=\"subtitle1\">Likes: {likes.length}</Typography>\r\n                      {/* <img src={selectedFile} width=\"200px\" /> */}\r\n                    </div>\r\n                  </Card>\r\n                ))}\r\n              </div>\r\n\r\n\r\n            </div>\r\n          )\r\n        }\r\n      </Paper >\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n\r\n\r\n","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Form\\Create_post.jsx",["179","180","181","182"],"import Form from './Form';\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { Container, Grow, Grid,Typography,CardContent ,Card} from '@material-ui/core';\r\nconst Create_post = ({ post,userstate }) => {\r\n    const [currentId, setCurrentId] = useState(0);\r\n    const navigate = useNavigate();\r\n    const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n\r\n    if(!user?.result?.name && userstate == null) {\r\n        \r\n        return(\r\n            <Card>\r\n                <div>\r\n                    <CardContent>\r\n                        <Typography>\r\n                            <h1>Please sign in to Participate</h1>\r\n                        </Typography>\r\n                    </CardContent>\r\n                </div>\r\n            </Card>\r\n        );\r\n      }\r\n    \r\n    //   setCurrentId(post._id);\r\n    return (\r\n        <Form currentId={currentId} setCurrentId={setCurrentId} userstate={1} />\r\n    );\r\n}\r\nexport default Create_post;\r\n","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\profile.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\reducers\\posts.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\FormDailog.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\icon.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Auth\\Input.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\actions\\auth.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\actions\\profile.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Home\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\actions\\posts.js",["183"],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\Dailog.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Pagination.jsx",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Form\\Form.js",["184"],"import React, { useState, useEffect } from 'react';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FileBase from 'react-file-base64';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport ChipInput from 'material-ui-chip-input';\r\nimport useStyles from './styles';\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId, userstate }) => {\r\n  const [postData, setPostData] = useState({ title: '', message: '', tags: [], selectedFile: '', creatorImgUrl: '', creatorEmail: '' });\r\n  const post = useSelector((state) => (currentId ? state.posts.posts.find((message) => message._id === currentId) : null));\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n  // console.log(user)\r\n  const creatorImgUrl = user.result.imageData;\r\n  const creatorEmail = user.result.email;\r\n  // console.log(creatorImgUrl)\r\n  const history = useNavigate();\r\n  // clears the post form to it's default state\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({ title: '', message: '', tags: [], selectedFile: '' });\r\n  };\r\n\r\n  //populating the form with post data to update\r\n  useEffect(() => {\r\n    if (!post?.title) clear();\r\n    if (post) setPostData(post); // setting the new data to which got from the form const[postData,setPostData]\r\n  }, [post]);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log(postData);\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.result?.name, creatorImgUrl:creatorImgUrl, creatorEmail: creatorEmail }, history));\r\n      clear();\r\n    } else {\r\n      dispatch(updatePost(currentId, { ...postData, name: user?.result?.name, creatorImgUrl:creatorImgUrl }));\r\n      for (let i = 0; i < 1000000; i++){\r\n        \r\n      }\r\n      clear();\r\n      history(`/posts/${currentId}`)\r\n    }\r\n  };\r\n  if (!user?.result?.name && userstate == null) {\r\n    return (\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign in to share your thoughts and much more.\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n  const handleAddChip = (tag) => {\r\n    setPostData({ ...postData, tags: [...postData.tags, tag] });\r\n  };\r\n  const handleDeleteChip = (chipToDelete) => {\r\n    setPostData({ ...postData, tags: postData.tags.filter((tag) => tag !== chipToDelete) });\r\n  };\r\n\r\n  // if (userstate != null) {\r\n  return (\r\n\r\n    <Paper className={classes.paper}>\r\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n        <Typography variant=\"h6\">{currentId ? `Updating \"${post.title}\"` : 'Share Your Thought and Experience'}</Typography>\r\n        <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({ ...postData, title: e.target.value })} />\r\n        <TextField name=\"message\" variant=\"outlined\" label=\"Message\" fullWidth multiline rows={4} value={postData.message} onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\r\n        <div>\r\n          <ChipInput\r\n          \r\n            name=\"tags\"\r\n            variant=\"outlined\"\r\n            label=\"Tags\"\r\n            fullWidth\r\n            value={postData.tags}\r\n            onAdd={(chip) => handleAddChip(chip)}\r\n            onDelete={(chip) => handleDeleteChip(chip)}\r\n          />\r\n        </div>\r\n        <div className={classes.fileInput}><FileBase type=\"file\" multiple={false} onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} /></div>\r\n        <Button className={classes.buttonSubmit} variant=\"contained\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n        <Button variant=\"contained\" className={classes.buttonClear} size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n\r\n};\r\n\r\nexport default Form;","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\CommentSection.jsx",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\api\\index.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Profile\\formStyle.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\formStyle.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\Post\\Post.js",["185","186"],"import React, {useState} from 'react';\r\nimport useStyles from './styles';\r\nimport { Card, CardActions, CardContent, CardMedia, Button, Typography, Avatar, Link } from '@material-ui/core';\r\nimport moment from 'moment';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport MoreHorizIcon from '@mui/icons-material/MoreHoriz';\r\nimport { useDispatch } from 'react-redux';\r\nimport { likePost, deletePost } from '../../../actions/posts';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport CardActionArea from '@mui/material/CardActionArea';\r\n\r\n\r\nconst Post = ({ post, setCurrentId, imgUrl }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const [likes, setLikes] = useState(post?.likes);\r\n  // console.log(\"Creator name : \"+post.name);\r\n  // console.log(\"Creator id : \" + post._id);\r\n  // console.log(\"Creator imageUrl : \"+ post.creatorImgUrl);\r\n  const user = JSON.parse(localStorage.getItem('profile'));\r\n\r\n  const userId = user?.result.googleId || user?.result?._id;\r\n  const hasLikedPost = post?.likes?.find((like) => like === userId);\r\n\r\n  const handleLike = async () => {\r\n    dispatch(likePost(post._id));\r\n\r\n    if (hasLikedPost) {\r\n      setLikes(post.likes.filter((id) => id !== userId));\r\n    } else {\r\n      setLikes([...post.likes, userId]);\r\n    }\r\n  };\r\n\r\n\r\n  const Likes = () => {\r\n    if (post?.likes?.length > 0) {\r\n      return likes.find((like) => like === (user?.result?.googleId || user?.result?._id))\r\n        ? (\r\n          <><FavoriteIcon fontSize=\"small\" style={{color: '#415b7c' , margin: '0px 0px' , padding: '0px 0px'}} />&nbsp;{likes.length > 2 ? `You and ${likes.length - 1} others` : `${likes.length} like${likes.length > 1 ? 's' : ''}`}</>\r\n        ) : (\r\n          <><FavoriteBorderIcon style={{color: '#415b7c', margin: '0px 0px' , padding: '0px 0px'}} fontSize=\"small\" />&nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}</>\r\n        );\r\n    }\r\n\r\n    return <><FavoriteBorderIcon style={{color: '#415b7c', margin: '0px 0px', padding: '0px 0px'}} fontSize=\"small\" />&nbsp;Like</>;\r\n  };\r\n\r\n  const openPost = (e) => {\r\n    // dispatch(getPost(post._id, navigate));\r\n\r\n    navigate(`/posts/${post._id}`);\r\n  };\r\n  \r\n  return (\r\n    <Card className={classes.card} raised elevation={6}>\r\n        {/* <CardMedia className={classes.media} image={post.selectedFile || 'https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png'} title={post.title} /> */}\r\n        <CardMedia className={classes.media} image={imgUrl} title={post.title} />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.name}</Typography>\r\n          <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n        </div>\r\n        <div className={classes.overlay2}>\r\n            <Button elevation={6}\r\n          onClick={(e) => {\r\n              navigate(`/profile/${post.creatorEmail}`)\r\n              // e.stopPropagation();\r\n              // setCurrentId(post._id);\r\n            }}\r\n            style={{ color: 'white' }}\r\n            size=\"small\"\r\n          >\r\n            <Avatar className={classes.purple} alt={post.name} src={post.creatorImgUrl}>{post.name.charAt(0)}</Avatar>\r\n          </Button>\r\n        \r\n          </div>\r\n      <CardActionArea onClick={openPost}>\r\n       \r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n        </div>\r\n        <Typography className={classes.title} gutterBottom variant=\"h5\" component=\"h2\">{post.title}</Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" noWrap={true} component=\"p\">{post.message}</Typography>\r\n        </CardContent>\r\n         </CardActionArea>\r\n     \r\n      <CardActions className={classes.cardActions}>\r\n        <Button size=\"small\" color=\"primary\" disabled={!user?.result} onClick={handleLike}>\r\n          <Likes />\r\n        </Button>\r\n        {(user?.result?.googleId === post?.creator || user?.result?._id === post?.creator) && (\r\n          <Button size=\"small\" style={{color: '#334155'}} onClick={() => dispatch(deletePost(post._id))}>\r\n            <DeleteIcon fontSize=\"small\" style={{color: '#334155'}} /> &nbsp; Delete\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\nexport default Post;","C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\Posts\\Post\\styles.js",[],"C:\\Users\\Hp\\Documents\\BlogUsingMERN\\BlogAndArchieveUsingMERN\\client\\src\\components\\PostDetails\\ContributeDailog.js",["187","188","189"],{"ruleId":"190","severity":1,"message":"191","line":11,"column":8,"nodeType":"192","messageId":"193","endLine":11,"endColumn":14},{"ruleId":"190","severity":1,"message":"194","line":11,"column":18,"nodeType":"192","messageId":"193","endLine":11,"endColumn":24},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":32,"column":43,"nodeType":"201","messageId":"202","endLine":32,"endColumn":58},{"ruleId":"190","severity":1,"message":"203","line":31,"column":18,"nodeType":"192","messageId":"193","endLine":31,"endColumn":25},{"ruleId":"204","severity":1,"message":"205","line":47,"column":8,"nodeType":"206","endLine":47,"endColumn":12,"suggestions":"207"},{"ruleId":"204","severity":1,"message":"208","line":36,"column":6,"nodeType":"206","endLine":36,"endColumn":16,"suggestions":"209"},{"ruleId":"190","severity":1,"message":"210","line":3,"column":62,"nodeType":"192","messageId":"193","endLine":3,"endColumn":66},{"ruleId":"190","severity":1,"message":"211","line":4,"column":64,"nodeType":"192","messageId":"193","endLine":4,"endColumn":74},{"ruleId":"190","severity":1,"message":"212","line":26,"column":10,"nodeType":"192","messageId":"193","endLine":26,"endColumn":19},{"ruleId":"204","severity":1,"message":"205","line":63,"column":6,"nodeType":"206","endLine":63,"endColumn":10,"suggestions":"213"},{"ruleId":"204","severity":1,"message":"205","line":70,"column":6,"nodeType":"206","endLine":70,"endColumn":12,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":152,"column":39,"nodeType":"217","messageId":"218","endLine":152,"endColumn":40},{"ruleId":"190","severity":1,"message":"219","line":5,"column":10,"nodeType":"192","messageId":"193","endLine":5,"endColumn":19},{"ruleId":"190","severity":1,"message":"220","line":5,"column":21,"nodeType":"192","messageId":"193","endLine":5,"endColumn":25},{"ruleId":"190","severity":1,"message":"221","line":5,"column":27,"nodeType":"192","messageId":"193","endLine":5,"endColumn":31},{"ruleId":"190","severity":1,"message":"222","line":8,"column":11,"nodeType":"192","messageId":"193","endLine":8,"endColumn":19},{"ruleId":"190","severity":1,"message":"223","line":1,"column":76,"nodeType":"192","messageId":"193","endLine":1,"endColumn":100},{"ruleId":"204","severity":1,"message":"224","line":32,"column":6,"nodeType":"206","endLine":32,"endColumn":12,"suggestions":"225"},{"ruleId":"190","severity":1,"message":"226","line":3,"column":81,"nodeType":"192","messageId":"193","endLine":3,"endColumn":85},{"ruleId":"190","severity":1,"message":"227","line":6,"column":8,"nodeType":"192","messageId":"193","endLine":6,"endColumn":21},{"ruleId":"190","severity":1,"message":"228","line":1,"column":27,"nodeType":"192","messageId":"193","endLine":1,"endColumn":36},{"ruleId":"190","severity":1,"message":"229","line":14,"column":23,"nodeType":"192","messageId":"193","endLine":14,"endColumn":34},{"ruleId":"190","severity":1,"message":"230","line":18,"column":8,"nodeType":"192","messageId":"193","endLine":18,"endColumn":17},"no-unused-vars","'Viewer' is defined but never used.","Identifier","unusedVar","'Worker' is defined but never used.","no-native-reassign",["231"],"no-negated-in-lhs",["232"],"react/jsx-pascal-case","Imported JSX component Create_post must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","'setUser' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["233"],"React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.",["234"],"'Form' is defined but never used.","'Typography' is defined but never used.","'currentId' is assigned a value but never used.",["235"],["236"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Container' is defined but never used.","'Grow' is defined but never used.","'Grid' is defined but never used.","'navigate' is assigned a value but never used.","'FETCH_CONTRIBUTION_BY_ID' is defined but never used.","React Hook useEffect has a missing dependency: 'clear'. Either include it or remove the dependency array.",["237"],"'Link' is defined but never used.","'MoreHorizIcon' is defined but never used.","'useEffect' is defined but never used.","'useSelector' is defined but never used.","'ChipInput' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"238","fix":"239"},{"desc":"240","fix":"241"},{"desc":"238","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},"Update the dependencies array to be: [dispatch, id]",{"range":"247","text":"248"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"249","text":"250"},{"range":"251","text":"248"},"Update the dependencies array to be: [dispatch, post]",{"range":"252","text":"253"},"Update the dependencies array to be: [clear, post]",{"range":"254","text":"255"},[1683,1687],"[dispatch, id]",[1058,1068],"[location, logout, user?.token]",[1791,1795],[1936,1942],"[dispatch, post]",[1460,1466],"[clear, post]"]